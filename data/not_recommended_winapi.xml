<root>
	<api name="GetEffectiveRightsFromAclW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-trustee-l1-1-1.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetEffectiveRightsFromAcl is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use Authz API.</mitigation>
	</api>
	<api name="GetEffectiveRightsFromAclA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-trustee-l1-1-1.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetEffectiveRightsFromAcl is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use Authz API.</mitigation>
	</api>
	<api name="GetInheritanceSourceW" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, GetInheritanceSourceW, is supported.</mitigation>
	</api>
	<api name="GetInheritanceSourceA" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, GetInheritanceSourceW, is supported.</mitigation>
	</api>
	<api name="TreeResetNamedSecurityInfoW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>ext-ms-win-advapi32-ntmarta-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, TreeResetNamedSecurityInfoW, is supported.</mitigation>
	</api>
	<api name="TreeResetNamedSecurityInfoA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>ext-ms-win-advapi32-ntmarta-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, TreeResetNamedSecurityInfoW, is supported.</mitigation>
	</api>
	<api name="TreeSetNamedSecurityInfoW" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, TreeSetNamedSecurityInfoW, is supported.</mitigation>
	</api>
	<api name="TreeSetNamedSecurityInfoA" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This version of this function is not supported. The wide character version of this function, TreeSetNamedSecurityInfoW, is supported.</mitigation>
	</api>
	<api name="BinarySDToSecurityDescriptor" deprecated="1">
		<dll>activeds.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used for legacy applications that must manually convert security descriptors to binary security descriptors. For new applications, use the IADsSecurityUtility interface, which does this conversion automatically.</mitigation>
	</api>
	<api name="SecurityDescriptorToBinarySD" deprecated="1">
		<dll>activeds.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used for legacy applications that must manually convert security descriptors to binary security descriptors. For new applications, use the IADsSecurityUtility interface, which does this conversion automatically.</mitigation>
	</api>
	<api name="ApphelpCheckShellObject" deprecated="1">
		<dll>apphelp.dll</dll>
		<dll>ext-ms-win-appcompat-apphelp-l1-1-0.dll</dll>
		<mitigation>This function is available for use in the Windows Server 2003 and Windows XP operating systems. It may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="GetNetScheduleAccountInformation" deprecated="1">
		<dll>mstask.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP1</os>
		<os>Windows Server 2003</os>
		<mitigation>GetNetScheduleAccountInformation is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="SetNetScheduleAccountInformation" deprecated="1">
		<dll>mstask.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP1</os>
		<os>Windows Server 2003</os>
		<mitigation>SetNetScheduleAccountInformation is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="BCryptAddContextFunction" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptAddContextFunction is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptConfigureContext" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptConfigureContext is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptConfigureContextFunction" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptConfigureContextFunction is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptCreateContext" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptCreateContext is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptDeleteContext" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptDeleteContext is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptEnumContexts" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptEnumContexts is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptQueryContextConfiguration" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptQueryContextConfiguration is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptQueryContextFunctionConfiguration" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptQueryContextFunctionConfiguration is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BCryptRemoveContextFunction" deprecated="1">
		<dll>bcrypt.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>BCryptRemoveContextFunction is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BluetoothAuthenticateMultipleDevices" deprecated="1">
		<dll>bthprops.cpl</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP2</os>
		<mitigation>BluetoothAuthenticateMultipleDevices has been deprecated. Implementation of this API is not recommended.</mitigation>
	</api>
	<api name="CM_Add_Empty_Log_Conf_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMAddEmptyLogConf instead.</mitigation>
	</api>
	<api name="CM_Add_ID_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMAddID instead.</mitigation>
	</api>
	<api name="CM_Add_ID_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMAddID instead.</mitigation>
	</api>
	<api name="CM_Add_Res_Des_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMAddResDes instead.</mitigation>
	</api>
	<api name="CM_Delete_Device_Interface_Key_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMDeleteDeviceInterfaceKey instead.</mitigation>
	</api>
	<api name="CM_Delete_Device_Interface_Key_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMDeleteDeviceInterfaceKey instead.</mitigation>
	</api>
	<api name="CM_Detect_Resource_Conflict" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported in Windows. Use CMQueryResourceConflictList instead.</mitigation>
	</api>
	<api name="CM_Detect_Resource_Conflict_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported in Windows. Use CMQueryResourceConflictList instead.</mitigation>
	</api>
	<api name="CM_Enumerate_Classes_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMEnumerateClasses instead.</mitigation>
	</api>
	<api name="CM_Enumerate_Enumerators_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMEnumerateEnumerators instead.</mitigation>
	</api>
	<api name="CM_Enumerate_Enumerators_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMEnumerateEnumerators instead.</mitigation>
	</api>
	<api name="CM_Free_Log_Conf_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMFreeLogConf instead.</mitigation>
	</api>
	<api name="CM_Free_Res_Des_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMFreeResDes instead.</mitigation>
	</api>
	<api name="CM_Get_Child_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetChild instead.</mitigation>
	</api>
	<api name="CM_Get_Class_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetClassProperty instead.</mitigation>
	</api>
	<api name="CM_Get_Class_Property_Keys_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-0.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-1.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetClassPropertyKeys instead.</mitigation>
	</api>
	<api name="CM_Get_Depth_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDepth instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceID instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceID instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_List_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceIDList instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_List_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceIDList instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_List_Size_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceIDListSize instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_List_Size_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceIDListSize instead.</mitigation>
	</api>
	<api name="CM_Get_Device_ID_Size_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceIDSize instead.</mitigation>
	</api>
	<api name="CM_Get_Device_Interface_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-0.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-1.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceInterfaceProperty instead.</mitigation>
	</api>
	<api name="CM_Get_Device_Interface_Property_Keys_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDeviceInterfacePropertyKeys instead.</mitigation>
	</api>
	<api name="CM_Get_DevNode_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDevNodeProperty instead.</mitigation>
	</api>
	<api name="CM_Get_DevNode_Property_Keys_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-0.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-1.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDevNodePropertyKeys instead.</mitigation>
	</api>
	<api name="CM_Get_DevNode_Status_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>setupapi.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetDevNodeStatus instead.</mitigation>
	</api>
	<api name="CM_Get_First_Log_Conf_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetFirstLogConf instead.</mitigation>
	</api>
	<api name="CM_Get_HW_Prof_FlagsW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Get_HW_Prof_FlagsA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Get_HW_Prof_Flags_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Get_HW_Prof_Flags_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Get_Log_Conf_Priority_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetLogConfPriority instead.</mitigation>
	</api>
	<api name="CM_Get_Next_Log_Conf_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetNextLogConf instead.</mitigation>
	</api>
	<api name="CM_Get_Next_Res_Des_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetNextResDes instead.</mitigation>
	</api>
	<api name="CM_Get_Parent_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetParent instead.</mitigation>
	</api>
	<api name="CM_Get_Res_Des_Data_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetResDesData instead.</mitigation>
	</api>
	<api name="CM_Get_Res_Des_Data_Size_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetResDesDataSize instead.</mitigation>
	</api>
	<api name="CM_Get_Sibling_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMGetSibling instead.</mitigation>
	</api>
	<api name="CM_Get_Version" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Get_Version_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Is_Dock_Station_Present_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMIsDockStationPresent instead.</mitigation>
	</api>
	<api name="CM_Is_Version_Available" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows XP</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Is_Version_Available_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows XP</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated and should not be used.</mitigation>
	</api>
	<api name="CM_Locate_DevNode_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMLocateDevNode instead.</mitigation>
	</api>
	<api name="CM_Locate_DevNode_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMLocateDevNode instead.</mitigation>
	</api>
	<api name="CM_Modify_Res_Des_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMModifyResDes instead.</mitigation>
	</api>
	<api name="CM_Open_Device_Interface_Key_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-0.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-1.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMOpenDeviceInterfaceKey instead.</mitigation>
	</api>
	<api name="CM_Open_Device_Interface_Key_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-0.dll</dll>
		<dll>api-ms-win-devices-config-l1-1-1.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMOpenDeviceInterfaceKey instead.</mitigation>
	</api>
	<api name="CM_Query_And_Remove_SubTree_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMQueryAndRemoveSubTree instead.</mitigation>
	</api>
	<api name="CM_Query_And_Remove_SubTree_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMQueryAndRemoveSubTree instead.</mitigation>
	</api>
	<api name="CM_Reenumerate_DevNode_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMReenumerateDevNode instead.</mitigation>
	</api>
	<api name="CM_Register_Device_Driver" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported.</mitigation>
	</api>
	<api name="CM_Register_Device_Driver_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported.</mitigation>
	</api>
	<api name="CM_Remove_SubTree" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported in Windows 2000 and later versions of Windows. Use CMQueryAndRemoveSubtree instead.</mitigation>
	</api>
	<api name="CM_Remove_SubTree_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported in Windows 2000 and later versions of Windows. Use CMQueryAndRemoveSubTree_Ex instead.</mitigation>
	</api>
	<api name="CM_Request_Device_Eject_ExA" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMRequestDeviceEject instead.</mitigation>
	</api>
	<api name="CM_Request_Device_Eject_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMRequestDeviceEject instead.</mitigation>
	</api>
	<api name="CM_Request_Eject_PC_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMRequestEjectPC instead.</mitigation>
	</api>
	<api name="CM_Run_Detection" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported.</mitigation>
	</api>
	<api name="CM_Run_Detection_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<mitigation>This function is obsolete and no longer supported.</mitigation>
	</api>
	<api name="CM_Set_Class_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMSetClassProperty instead.</mitigation>
	</api>
	<api name="CM_Set_Device_Interface_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMSetDeviceInterfaceProperty instead.</mitigation>
	</api>
	<api name="CM_Set_DevNode_Problem_Ex" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 2000</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMSetDevNodeProblem instead.</mitigation>
	</api>
	<api name="CM_Set_DevNode_Property_ExW" deprecated="1">
		<dll>cfgmgr32.dll</dll>
		<os>Windows 10</os>
		<mitigation>Beginning with Windows 8 and Windows Server 2012, this function has been deprecated. Please use CMSetDevNodeProperty instead.</mitigation>
	</api>
	<api name="SetEndOfLog" deprecated="1">
		<dll>clfsw32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003 R2</os>
		<mitigation>This function has been deprecated. Use TruncateLog instead.</mitigation>
	</api>
	<api name="CreateStreamOnHGlobal" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<dll>api-ms-win-core-com-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-ole32-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-ole32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Consider using the SHCreateMemStream function, which produces better performance, or for Windows Store apps, consider using InMemoryRandomAccessStream.</mitigation>
	</api>
	<api name="StgCreateDocfile" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-0.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-1.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-2.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-3.dll</dll>
		<dll>api-ms-win-core-com-l2-1-1.dll</dll>
		<dll>coml2.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Applications should use the new function, StgCreateStorageEx, instead of StgCreateDocfile, to take advantage of enhanced Structured Storage features. This function, StgCreateDocfile, still exists for compatibility with Windows 2000.</mitigation>
	</api>
	<api name="StgOpenStorage" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>ext-ms-win-ole32-ie-ext-l1-1-0.dll</dll>
		<dll>api-ms-win-core-com-l2-1-1.dll</dll>
		<dll>coml2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Applications should use the new function, StgOpenStorageEx, instead of StgOpenStorage, to take advantage of the enhanced and Windows Structured Storage features. This function, StgOpenStorage, still exists for compatibility with applications running on Windows 2000.</mitigation>
	</api>
	<api name="CreateStatusWindowW" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Use CreateWindow instead.</mitigation>
	</api>
	<api name="CreateStatusWindowA" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Use CreateWindow instead.</mitigation>
	</api>
	<api name="CreateToolbarEx" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated, because it does not support all features of toolbars. Use CreateWindowEx instead. For examples, see Using Toolbar Controls.</mitigation>
	</api>
	<api name="CreateUpDownControl" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. It is a 16 bit function and cannot handle 32 bit values for range and position.</mitigation>
	</api>
	<api name="InitCommonControls" deprecated="1">
		<dll>comctl32.dll</dll>
		<dll>ext-ms-win-shell-comctl32-init-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-comctl32-init-l1-1-1.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. New applications should use the InitCommonControlsEx function.</mitigation>
	</api>
	<api name="ShowHideMenuCtl" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>ShowHideMenuCtl is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="GetOpenFileNameW" deprecated="1">
		<dll>comdlg32.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Starting with Windows Vista, the Open and Save As common dialog boxes have been superseded by the Common Item Dialog. We recommended that you use the Common Item Dialog API instead of these dialog boxes from the Common Dialog Box Library.</mitigation>
	</api>
	<api name="GetOpenFileNameA" deprecated="1">
		<dll>comdlg32.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Starting with Windows Vista, the Open and Save As common dialog boxes have been superseded by the Common Item Dialog. We recommended that you use the Common Item Dialog API instead of these dialog boxes from the Common Dialog Box Library.</mitigation>
	</api>
	<api name="GetSaveFileNameW" deprecated="1">
		<dll>comdlg32.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Starting with Windows Vista, the Open and Save As common dialog boxes have been superseded by the Common Item Dialog. We recommended that you use the Common Item Dialog API instead of these dialog boxes from the Common Dialog Box Library.</mitigation>
	</api>
	<api name="GetSaveFileNameA" deprecated="1">
		<dll>comdlg32.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-comdlg32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Starting with Windows Vista, the Open and Save As common dialog boxes have been superseded by the Common Item Dialog. We recommended that you use the Common Item Dialog API instead of these dialog boxes from the Common Dialog Box Library.</mitigation>
	</api>
	<api name="MTSCreateActivity" deprecated="1">
		<dll>comsvcs.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows Server 2003</os>
		<mitigation>MTSCreateActivity is available for in the Windows 2000 Professional and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CoCreateActivity function.</mitigation>
	</api>
	<api name="SafeRef" deprecated="1">
		<dll>comsvcs.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use SafeRef in COM+. This function was used by objects in MTS to obtain a reference to itself. With COM+, this is no longer necessary.</mitigation>
	</api>
	<api name="CertViewPropertiesW" deprecated="1">
		<dll>cryptdlg.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CertViewProperties function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CryptUIDlgViewContext function.</mitigation>
	</api>
	<api name="CertViewPropertiesA" deprecated="1">
		<dll>cryptdlg.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CertViewProperties function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CryptUIDlgViewContext function.</mitigation>
	</api>
	<api name="GetFriendlyNameOfCertW" deprecated="1">
		<dll>cryptdlg.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The GetFriendlyNameOfCert function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CertGetNameString function with the CERTNAMEFRIENDLYDISPLAYTYPE flag.</mitigation>
	</api>
	<api name="GetFriendlyNameOfCertA" deprecated="1">
		<dll>cryptdlg.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The GetFriendlyNameOfCert function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CertGetNameString function with the CERTNAMEFRIENDLYDISPLAYTYPE flag.</mitigation>
	</api>
	<api name="CryptUIWizDigitalSign" deprecated="1">
		<dll>cryptui.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptUIWizDigitalSign function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="D3D10DisassembleEffect" deprecated="1">
		<dll>d3d10.dll</dll>
		<mitigation>This function -- which disassembles a compiled effect into a text string that contains assembly instructions and register assignments -- has been deprecated. Instead, use D3DDisassemble10Effect.</mitigation>
	</api>
	<api name="D3D10CreateBlob" deprecated="1">
		<dll>d3d10.dll</dll>
		<mitigation>Instead of using this function, we recommend that you use the D3DCreateBlob API.</mitigation>
	</api>
	<api name="D3D10DisassembleShader" deprecated="1">
		<dll>d3d10.dll</dll>
		<mitigation>This function -- which disassembles a compiled shader into a text string that contains assembly instructions and register assignments -- has been deprecated. Instead, use D3DDisassemble.</mitigation>
	</api>
	<api name="D3D10ReflectShader" deprecated="1">
		<dll>d3d10.dll</dll>
		<mitigation>This function -- which creates a shader-reflection object for retrieving information about a compiled shader -- has been deprecated. Instead, use D3DReflect.</mitigation>
	</api>
	<api name="D3DGetInputAndOutputSignatureBlob" deprecated="1">
		<dll>d3dcompiler_47.dll</dll>
		<mitigation>D3DGetInputAndOutputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3DBLOBINPUTANDOUTPUTSIGNATUREBLOB value.</mitigation>
	</api>
	<api name="D3DGetInputSignatureBlob" deprecated="1">
		<dll>d3dcompiler_47.dll</dll>
		<mitigation>D3DGetInputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3DBLOBINPUTSIGNATUREBLOB value.</mitigation>
	</api>
	<api name="D3DGetOutputSignatureBlob" deprecated="1">
		<dll>d3dcompiler_47.dll</dll>
		<mitigation>D3DGetOutputSignatureBlob may be altered or unavailable for releases after Windows 8.1. Instead use D3DGetBlobPart with the D3DBLOBOUTPUTSIGNATUREBLOB value.</mitigation>
	</api>
	<api name="GetDateFormatW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetDateFormatEx function to GetDateFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use GetDateFormatEx.</mitigation>
	</api>
	<api name="GetDateFormatA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetDateFormatEx function to GetDateFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use GetDateFormatEx.</mitigation>
	</api>
	<api name="GetTimeFormatW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetTimeFormatEx function to GetTimeFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use GetTimeFormatEx.</mitigation>
	</api>
	<api name="GetTimeFormatA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-datetime-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetTimeFormatEx function to GetTimeFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use GetTimeFormatEx.</mitigation>
	</api>
	<api name="ImageDirectoryEntryToData" deprecated="1">
		<dll>dbghelp.dll</dll>
		<dll>imagehlp.dll</dll>
		<mitigation>This function has been superseded by the ImageDirectoryEntryToDataEx function. Use ImageDirectoryEntryToDataEx to retrieve the section header.</mitigation>
	</api>
	<api name="MapDebugInformation" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for backward compatibility. It does not return reliable information. New applications should use the SymGetModuleInfo64 and SymLoadModule64 functions.</mitigation>
	</api>
	<api name="SymEnumerateSymbolsW64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymEnumSymbols, which is faster and more powerful.</mitigation>
	</api>
	<api name="SymEnumerateSymbols64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymEnumSymbols, which is faster and more powerful.</mitigation>
	</api>
	<api name="SymGetSymFromAddr" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymFromAddr.</mitigation>
	</api>
	<api name="SymGetSymFromAddr64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymFromAddr.</mitigation>
	</api>
	<api name="SymGetSymFromName" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymFromName.</mitigation>
	</api>
	<api name="SymGetSymFromName64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymFromName.</mitigation>
	</api>
	<api name="SymGetSymNext" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymNext.</mitigation>
	</api>
	<api name="SymGetSymNext64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymNext.</mitigation>
	</api>
	<api name="SymGetSymPrev" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymPrev.</mitigation>
	</api>
	<api name="SymGetSymPrev64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for compatibility. Applications should use SymPrev.</mitigation>
	</api>
	<api name="SymLoadModule" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function has been superseded by the SymLoadModuleEx function.</mitigation>
	</api>
	<api name="SymLoadModule64" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function has been superseded by the SymLoadModuleEx function.</mitigation>
	</api>
	<api name="UnmapDebugInformation" deprecated="1">
		<dll>dbghelp.dll</dll>
		<mitigation>This function is provided only for backward compatibility. New applications should use the SymUnloadModule64 function.</mitigation>
	</api>
	<api name="DCIBeginAccess" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DCICloseProvider" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DCICreatePrimary" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DCIDestroy" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DCIEndAccess" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DCIOpenProvider" deprecated="1">
		<dll>dciman32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="ImpersonateDdeClientWindow" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. It is very important to check the return value of the call. If the function fails for any reason, the client is not impersonated and any subsequent client request is made in the security context of the calling process. If the calling process is running as a highly privileged account, such as LocalSystem or as a member of an administrative group, the user may be able to perform actions that would otherwise be disallowed. Therefore, if the call fails or raises an error do not continue execution of the client request.</mitigation>
	</api>
	<api name="DdeImpersonateClient" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>If the call to DdeImpersonateClient fails for any reason, the client is not impersonated and the client request is made in the security context of the calling process. If the calling process is running as a highly privileged account, such as LocalSystem, or as a member of an administrative group, the user may be able to perform actions that would otherwise be disallowed. Therefore it is important that you always check the return value of the call, and if it fails to raise an error, do not continue execution of the client request.</mitigation>
	</api>
	<api name="DdAttachSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdCreateDIBSection" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdCreateDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdCreateSurfaceObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdDeleteDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdDeleteSurfaceObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdGetDC" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdGetDxHandle" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdQueryDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdQueryDisplaySettingsUniqueness" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>api-ms-win-dx-d3dkmt-l1-1-0.dll</dll>
		<dll>api-ms-win-dx-d3dkmt-l1-1-1.dll</dll>
		<dll>api-ms-win-dx-d3dkmt-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdReenableDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdReleaseDC" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdResetVisrgn" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdSetGammaRamp" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdSwapTextureHandles" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DdUnattachSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="DhcpAddSubnetElementV5" deprecated="1">
		<dll>dhcpsapi.dll</dll>
		<os>Windows 2000 Server</os>
		<mitigation>This API emulates the RPC interface used by the Windows NT 4.0 DHCP server. It is provided for backward compatibility with older versions of the DHCP Administrator application.</mitigation>
	</api>
	<api name="DhcpRemoveSubnetElementV5" deprecated="1">
		<dll>dhcpsapi.dll</dll>
		<os>Windows 2000 Server</os>
		<mitigation>This API emulates the RPC interface used by the Windows NT 4.0 DHCP server. It is provided for backward compatibility with older versions of the DHCP Administrator application.</mitigation>
	</api>
	<api name="DPA_Clone" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Clone is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_Create" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Create is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_DeleteAllPtrs" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_DeleteAllPtrs is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_DeletePtr" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_DeletePtr is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_Destroy" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Destroy is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_DestroyCallback" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_DestroyCallback is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_EnumCallback" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_EnumCallback is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_GetPtr" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_GetPtr is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_GetPtrIndex" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_GetPtrIndex is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_InsertPtr" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_InsertPtr is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_LoadStream" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_LoadStream is available in Windows Vista. It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_Merge" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Merge is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_SaveStream" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_SaveStream is available in Windows Vista. It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_Search" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Search is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_SetPtr" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_SetPtr is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DPA_Sort" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DPA_Sort is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_Create" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_Create is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_DeleteItem" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_DeleteItem is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_Destroy" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_Destroy is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_DestroyCallback" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_DestroyCallback is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_GetItemPtr" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_GetItemPtr is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_InsertItem" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_InsertItem is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DSA_SetItem" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DSA_SetItem is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DsGetFriendlyClassName" deprecated="1">
		<dll>dsuiext.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. New applications should use the IDsDisplaySpecifier::GetFriendlyClassName method to perform this function.</mitigation>
	</api>
	<api name="DsGetIcon" deprecated="1">
		<dll>dsuiext.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. New applications should use the IDsDisplaySpecifier::GetIcon method to perform this function.</mitigation>
	</api>
	<api name="DwmAttachMilContent" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is deprecated and only returns DWMECOMPOSITIONDISABLED in Windows 7 and later. It may be removed in future versions of Windows.</mitigation>
	</api>
	<api name="DwmDetachMilContent" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is deprecated and only returns DWMECOMPOSITIONDISABLED in Windows 7 and later. It may be removed in future versions of Windows.</mitigation>
	</api>
	<api name="DwmEnableComposition" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is deprecated as of Windows 8. DWM can no longer be programmatically disabled.</mitigation>
	</api>
	<api name="DwmGetGraphicsStreamClient" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is deprecated and only returns DWMECOMPOSITIONDISABLED in Windows 7 and later. It may be removed in future versions of Windows.</mitigation>
	</api>
	<api name="DwmGetGraphicsStreamTransformHint" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is deprecated and only returns DWMECOMPOSITIONDISABLED in Windows 7 and later. It may be removed in future versions of Windows.</mitigation>
	</api>
	<api name="DwmModifyPreviousDxFrameDuration" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>DwmModifyPreviousDxFrameDuration is no longer supported. Starting with Windows 8.1, calls to DwmModifyPreviousDxFrameDuration always return E_NOTIMPL.</mitigation>
	</api>
	<api name="DwmSetDxFrameDuration" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>DwmSetDxFrameDuration is no longer supported. Starting with Windows 8.1, calls to DwmSetDxFrameDuration always return E_NOTIMPL.</mitigation>
	</api>
	<api name="DwmSetPresentParameters" deprecated="1">
		<dll>dwmapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>DwmSetPresentParameters is no longer supported. Starting with Windows 8.1, calls to DwmSetPresentParameters always return E_NOTIMPL.</mitigation>
	</api>
	<api name="AddERExcludedApplicationW" deprecated="1">
		<dll>faultrep.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The AddERExcludedApplication function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the WerAddExcludedApplication function.</mitigation>
	</api>
	<api name="AddERExcludedApplicationA" deprecated="1">
		<dll>faultrep.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The AddERExcludedApplication function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the WerAddExcludedApplication function.</mitigation>
	</api>
	<api name="EnableTrace" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For additional functionality, new code should use EnableTraceEx2.</mitigation>
	</api>
	<api name="EnableTraceEx" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. For additional functionality, new code should use EnableTraceEx2.</mitigation>
	</api>
	<api name="EnumerateTraceGuids" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by EnumerateTraceGuidsEx.</mitigation>
	</api>
	<api name="FlushTraceW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_FLUSH.</mitigation>
	</api>
	<api name="FlushTraceA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_FLUSH.</mitigation>
	</api>
	<api name="QueryTraceW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_QUERY.</mitigation>
	</api>
	<api name="QueryTraceA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_QUERY.</mitigation>
	</api>
	<api name="RegisterTraceGuidsW" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-obsolete-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>api-ms-win-eventing-classicprovider-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. New code should use EventRegister to register a Windows Vista-style (Crimson) ETW event trace provider.</mitigation>
	</api>
	<api name="RegisterTraceGuidsA" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-obsolete-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>api-ms-win-eventing-classicprovider-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. New code should use EventRegister to register a Windows Vista-style (Crimson) ETW event trace provider.</mitigation>
	</api>
	<api name="RemoveTraceCallback" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use this function. It may be unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SetTraceCallback" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use this function; it may be unavailable in subsequent versions. Instead, filter for the event trace class in your EventRecordCallback function.</mitigation>
	</api>
	<api name="StopTraceW" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-controller-l1-1-0.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_STOP.</mitigation>
	</api>
	<api name="StopTraceA" deprecated="1">
		<dll>sechost.dll</dll>
		<dll>advapi32.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>api-ms-win-eventing-controller-l1-1-0.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_STOP.</mitigation>
	</api>
	<api name="UpdateTraceW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_UPDATE.</mitigation>
	</api>
	<api name="UpdateTraceA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-eventing-legacy-l1-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. Instead, use ControlTrace with ControlCode set to EVENTTRACECONTROL_UPDATE.</mitigation>
	</api>
	<api name="GetFeatureEnabledState" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-0.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="GetFeatureVariant" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-1.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="RecordFeatureError" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-0.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="RecordFeatureUsage" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-0.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="SubscribeFeatureStateChangeNotification" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-0.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="UnsubscribeFeatureStateChangeNotification" internal="1">
		<dll>api-ms-win-core-featurestaging-l1-1-0.dll</dll>
		<mitigation>This function is intended for infrastructure use only. Do not use this function.</mitigation>
	</api>
	<api name="FhServiceBlockBackup" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceBlockBackup is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceClosePipe" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceClosePipe is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceOpenPipe" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceOpenPipe is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceReloadConfiguration" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceReloadConfiguration is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceStartBackup" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceStartBackup is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceStopBackup" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceStopBackup is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="FhServiceUnblockBackup" deprecated="1">
		<dll>fhsvcctl.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>FhServiceUnblockBackup is deprecated and may be altered or unavailable in future releases.</mitigation>
	</api>
	<api name="SetFileValidData" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-file-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-file-l1-2-0.dll</dll>
		<dll>api-ms-win-core-file-l1-2-1.dll</dll>
		<dll>api-ms-win-core-file-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Use of this function without proper security considerations may compromise data privacy and security. See function description page for more information.</mitigation>
	</api>
	<api name="CheckGamingPrivilegeSilently" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="CheckGamingPrivilegeWithUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ProcessPendingGameUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ShowChangeFriendRelationshipUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ShowGameInviteUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ShowPlayerPickerUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ShowProfileCardUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="ShowTitleAchievementsUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="TryCancelPendingGameUI" xbox_only="1">
		<dll>gamingtcui.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-0.dll</dll>
		<dll>gamingtcuistub.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-1.dll</dll>
		<dll>xbox.shell.api.dll</dll>
		<dll>api-ms-win-gaming-tcui-l1-1-2.dll</dll>
		<mitigation>This API is only supported for Xbox developers.</mitigation>
	</api>
	<api name="NlsDllCodePageTranslation" deprecated="1">
		<dll>c_g18030.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Do not use this function. It can behave differently in different versions of Windows. To convert GB18030 bytes to Unicode characters or Unicode characters to GB18030 bytes, use the MultiByteToWideChar and WideCharToMultiByte functions.</mitigation>
	</api>
	<api name="HttpAddUrl" deprecated="1">
		<dll>httpapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>Starting with HTTP Server API Version 2.0, applications should call HttpAddUrlToUrlGroup to register a URL; HttpAddUrl should not be used.</mitigation>
	</api>
	<api name="HttpCreateHttpHandle" deprecated="1">
		<dll>httpapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>Starting with HTTP Server API Version 2.0, applications should call HttpCreateRequestQueue to create the request queue; HttpCreateHttpHandle should not be used.</mitigation>
	</api>
	<api name="HttpRemoveUrl" deprecated="1">
		<dll>httpapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>Starting with HTTP Server API Version 2.0, applications should call HttpRemoveUrlFromUrlGroup to register a URL; HttpRemoveUrl should not be used.</mitigation>
	</api>
	<api name="CMCheckColorsInGamut" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CMCheckColorsInGamut is no longer available for use as of Windows Vista.</mitigation>
	</api>
	<api name="CMCreateProfile" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CMCreateProfile is no longer available for use as of Windows Vista.</mitigation>
	</api>
	<api name="CMCreateProfileW" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CMCreateProfileW is no longer available for use as of Windows Vista.</mitigation>
	</api>
	<api name="CMCreateTransform" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 10 Build 20348</os>
		<os>Windows 10 Build 20348</os>
		<mitigation>Deprecated. There is no replacement API because this one was no longer being used. Developers of alternate CMM modules are not required to implement it.</mitigation>
	</api>
	<api name="CMCreateTransformW" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 10 Build 20348</os>
		<os>Windows 10 Build 20348</os>
		<mitigation>Deprecated. There is no replacement API because this one was no longer being used. Developers of alternate CMM modules are not required to implement it.</mitigation>
	</api>
	<api name="CMTranslateRGBs" deprecated="1">
		<dll>icm32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CMTranslateRGBs is no longer available for use as of Windows Vista.</mitigation>
	</api>
	<api name="CheckConnectionWizard" deprecated="1">
		<dll>inetcfg.dll</dll>
		<mitigation>This function is unsupported and may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="SetShellNext" deprecated="1">
		<dll>inetcfg.dll</dll>
		<mitigation>This function is available for use in the Windows XP operating system. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="BindImage" deprecated="1">
		<dll>imagehlp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the BindImageEx function. Use BindImageEx to provide a status routine or flags to control the image binding.</mitigation>
	</api>
	<api name="UpdateDebugInfoFile" deprecated="1">
		<dll>imagehlp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the UpdateDebugInfoFileEx function. Use UpdateDebugInfoFileEx to verify the checksum value.</mitigation>
	</api>
	<api name="SendIMEMessageExW" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete and should not be used.</mitigation>
	</api>
	<api name="SendIMEMessageExA" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete and should not be used.</mitigation>
	</api>
	<api name="ImmDisableTextFrameService" deprecated="1">
		<dll>imm32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ImmDisableTextFrameService is no longer available for use as of Windows Vista. Instead, use ImmDisableIME.</mitigation>
	</api>
	<api name="SetInputScopeXML" deprecated="1">
		<dll>msctf.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Do not use.</mitigation>
	</api>
	<api name="MIMEAssociationDialogW" deprecated="1">
		<dll>url.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</mitigation>
	</api>
	<api name="MIMEAssociationDialogA" deprecated="1">
		<dll>url.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</mitigation>
	</api>
	<api name="URLAssociationDialogW" deprecated="1">
		<dll>url.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</mitigation>
	</api>
	<api name="URLAssociationDialogA" deprecated="1">
		<dll>url.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</mitigation>
	</api>
	<api name="AllocateAndGetTcpExTableFromStack" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is no longer available for use as of Windows Vista. Instead, use the GetTcpTable or GetExtendedTcpTable function to retrieve the TCP connection table.</mitigation>
	</api>
	<api name="AllocateAndGetUdpExTableFromStack" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is no longer available for use as of Windows Vista. Instead, use the GetUdpTable or GetExtendedUdpTable function to retrieve the UDP connection table.</mitigation>
	</api>
	<api name="DisableMediaSense" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The TCP/IP stack on Windows Vista and later was changed to not hide disconnected interfaces when a disconnect event occurs. So on Windows Vista and later, the DisableMediaSense and RestoreMediaSense functions do not do anything and always returns NO_ERROR.</mitigation>
	</api>
	<api name="NhpAllocateAndGetInterfaceInfoFromStack" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Professional with SP1</os>
		<os>Windows Server 2003</os>
		<os>Windows 2000 Server with SP1</os>
		<mitigation>This function is no longer available for use as of Windows Vista. Instead, use the GetAdaptersAddresses function and the associated IPADAPTER_ADDRESSES structure.</mitigation>
	</api>
	<api name="ResolveNeighbor" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ResolveNeighbor is no longer available for use as of Windows Vista. Instead, use ResolveIpNetEntry2.</mitigation>
	</api>
	<api name="RestoreMediaSense" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The TCP/IP stack on Windows Vista and later was changed to not hide disconnected interfaces when a disconnect event occurs. So on Windows Vista and later, the DisableMediaSense and RestoreMediaSense functions do not do anything and always returns NO_ERROR.</mitigation>
	</api>
	<api name="QueryIoRateControlInformationJobObject" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-job-l2-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>Starting with Windows 10, version 1607, this function is no longer supported.</mitigation>
	</api>
	<api name="SetIoRateControlInformationJobObject" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-job-l2-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>Starting with Windows 10, version 1607, this function is no longer supported.</mitigation>
	</api>
	<api name="FreeResource" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete and is only supported for backward compatibility with 16-bit Windows. For 32-bit Windows applications, it is not necessary to free the resources loaded using LoadResource. If used on 32 or 64-bit Windows systems, this function will return FALSE.</mitigation>
	</api>
	<api name="NetAccessAdd" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetAccessDel" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetAccessEnum" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetAccessGetInfo" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetAccessGetUserPerms" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetAccessSetInfo" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete. For a list of alternate functions, see Authorization Functions (https://learn.microsoft.com/en-us/windows/win32/secauthz/authorization-functions).</mitigation>
	</api>
	<api name="NetGroupEnum" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The NetQueryDisplayInformation function provides an efficient mechanism for enumerating global groups. When possible, it is recommended that you use NetQueryDisplayInformation instead of the NetGroupEnum function.</mitigation>
	</api>
	<api name="NetAlertRaise" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the alerter service is not supported.</mitigation>
	</api>
	<api name="NetAlertRaiseEx" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the alerter service is not supported.</mitigation>
	</api>
	<api name="NetScheduleJobAdd" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NetScheduleJobAdd is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="NetScheduleJobDel" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NetScheduleJobDel is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="NetScheduleJobEnum" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NetScheduleJobEnum is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="NetScheduleJobGetInfo" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NetScheduleJobGetInfo is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces (https://learn.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-2-0-interfaces).</mitigation>
	</api>
	<api name="NetMessageBufferSend" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the messenger service is not supported.</mitigation>
	</api>
	<api name="NetMessageNameAdd" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the messenger service is not supported.</mitigation>
	</api>
	<api name="NetMessageNameDel" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the messenger service is not supported.</mitigation>
	</api>
	<api name="NetMessageNameEnum" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the messenger service is not supported.</mitigation>
	</api>
	<api name="NetMessageNameGetInfo" deprecated="1">
		<dll>netapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported as of Windows Vista because the messenger service is not supported.</mitigation>
	</api>
	<api name="NetWkstaTransportAdd" deprecated="1">
		<dll>netapi32.dll</dll>
		<mitigation>This function is obsolete. To change the default settings for transport protocols manually, use the Local Area Connection Properties dialog box in the Network and Dial-Up Connections folder.</mitigation>
	</api>
	<api name="NetWkstaTransportDel" deprecated="1">
		<dll>netapi32.dll</dll>
		<mitigation>This function is obsolete. To change the default settings for transport protocols manually, use the Local Area Connection Properties dialog box in the Network and Dial-Up Connections folder.</mitigation>
	</api>
	<api name="MagGetImageScalingCallback" deprecated="1">
		<dll>magnification.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>The MagGetImageScalingCallback function is deprecated in Windows 7 and later, and should not be used in new applications. There is no alternate functionality.</mitigation>
	</api>
	<api name="MagSetImageScalingCallback" deprecated="1">
		<dll>magnification.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>The MagSetImageScalingCallback function is deprecated in Windows 7 and later, and should not be used in new applications. There is no alternate functionality.</mitigation>
	</api>
	<api name="MAPIFreeBuffer" deprecated="1">
		<dll>mapi32.dll</dll>
		<mitigation>The use of this function is discouraged. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="MFConvertColorInfoFromDXVA" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Extended Color Information (https://learn.microsoft.com/en-us/windows/win32/medfound/extended-color-information).</mitigation>
	</api>
	<api name="MFConvertColorInfoToDXVA" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Extended Color Information (https://learn.microsoft.com/en-us/windows/win32/medfound/extended-color-information).</mitigation>
	</api>
	<api name="MFCreateAudioMediaType" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="MFCreateMFVideoFormatFromMFMediaType" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="MFCreateVideoMediaType" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="MFCreateVideoMediaTypeFromBitMapInfoHeader" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is not implemented.</mitigation>
	</api>
	<api name="MFGetUncompressedVideoFormat" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="MFInitMediaTypeFromMFVideoFormat" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="MFInitVideoFormat" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="MFInitVideoFormat_RGB" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Applications should avoid using the MFVIDEOFORMAT structure, and use media type attributes instead. For more information, see Video Media Types (https://learn.microsoft.com/en-us/windows/win32/medfound/video-media-types).</mitigation>
	</api>
	<api name="CreateNamedPropertyStore" deprecated="1">
		<dll>mf.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Instead, applications should use the PSCreateMemoryPropertyStore function to create named property stores.</mitigation>
	</api>
	<api name="CreatePropertyStore" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Instead, applications should use the PSCreateMemoryPropertyStore function to create property stores.</mitigation>
	</api>
	<api name="MFPCreateMediaPlayer" deprecated="1">
		<dll>mfplay.dll</dll>
		<os>Windows 7</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>Deprecated. This API may be removed from future releases of Windows. Applications should use the Media Session for playback.</mitigation>
	</api>
	<api name="SnmpMgrClose" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrCtl" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrGetTrap" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrGetTrapEx" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrOidToStr" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrOpen" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrRequest" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrStrToOid" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpMgrTrapListen" deprecated="1">
		<dll>mgmtapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="NdrMesProcEncodeDecode2" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NdrMesProcEncodeDecode2 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="mmGetCurrentTask" deprecated="1">
		<dll>winmm.dll</dll>
		<mitigation>The mmGetCurrentTask function is deprecated. Applications should not use this function.</mitigation>
	</api>
	<api name="mmTaskBlock" deprecated="1">
		<dll>winmm.dll</dll>
		<mitigation>The mmTaskBlock function is deprecated. Applications should not use this function.</mitigation>
	</api>
	<api name="mmTaskCreate" deprecated="1">
		<dll>winmm.dll</dll>
		<mitigation>The mmTaskCreate function is deprecated. Applications should not use this function.</mitigation>
	</api>
	<api name="mmTaskSignal" deprecated="1">
		<dll>mmtasksignal.dll</dll>
		<mitigation>The mmTaskSignal function is deprecated. Applications should not use this function.</mitigation>
	</api>
	<api name="mmTaskYield" deprecated="1">
		<dll>winmm.dll</dll>
		<mitigation>The mmTaskYield function is deprecated. Applications should not use this function.</mitigation>
	</api>
	<api name="waveInGetPosition" deprecated="1">
		<dll>winmm.dll</dll>
		<dll>api-ms-win-mm-mme-l1-1-0.dll</dll>
		<dll>winmmbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>waveInGetPosition is no longer supported for use as of Windows Vista. Instead, use IAudioClock::GetPosition.</mitigation>
	</api>
	<api name="mmioOpenW" deprecated="1">
		<dll>winmm.dll</dll>
		<dll>api-ms-win-mm-misc-l1-1-0.dll</dll>
		<dll>winmmbase.dll</dll>
		<dll>api-ms-win-mm-misc-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. Applications should call CreateFile to create or open files.</mitigation>
	</api>
	<api name="mmioOpenA" deprecated="1">
		<dll>winmm.dll</dll>
		<dll>api-ms-win-mm-misc-l1-1-0.dll</dll>
		<dll>winmmbase.dll</dll>
		<dll>api-ms-win-mm-misc-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. Applications should call CreateFile to create or open files.</mitigation>
	</api>
	<api name="CryptCATAdminAcquireContext" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminAcquireContext function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminAddCatalog" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminAddCatalog function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminCalcHashFromFileHandle" deprecated="1">
		<dll>wintrust.dll</dll>
		<dll>mscat32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminCalcHashFromFileHandle function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminEnumCatalogFromHash" deprecated="1">
		<dll>wintrust.dll</dll>
		<dll>mscat32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminEnumCatalogFromHash function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminReleaseCatalogContext" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminReleaseCatalogContext function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminReleaseContext" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminReleaseContext function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminRemoveCatalog" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminRemoveCatalog function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATAdminResolveCatalogPath" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATAdminResolveCatalogPath function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATCatalogInfoFromContext" deprecated="1">
		<dll>wintrust.dll</dll>
		<dll>mscat32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCatalogInfoFromContext function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATCDFClose" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCDFClose function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATCDFEnumCatAttributes" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCDFEnumCatAttributes function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATCDFOpen" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCDFOpen function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATClose" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATClose function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATEnumerateAttr" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATEnumerateAttr function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATEnumerateCatAttr" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATEnumerateCatAttr function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATEnumerateMember" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATEnumerateMember function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATGetAttrInfo" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATGetAttrInfo function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATGetMemberInfo" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATGetMemberInfo function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATHandleFromStore" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATHandleFromStore function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATOpen" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATOpen function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATPersistStore" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATPersistStore function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATPutAttrInfo" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATPutAttrInfo function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATPutCatAttrInfo" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATPutCatAttrInfo function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATPutMemberInfo" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATPutMemberInfo function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATStoreFromHandle" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATStoreFromHandle function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="IsCatalogFile" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The IsCatalogFile function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DRMAcquireLicense" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMAttest" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMCreateIssuanceLicense" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMGetEnvironmentInfo" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMGetSignedIssuanceLicense" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMGetSignedIssuanceLicenseEx" deprecated="1">
		<dll>msdrm.dll</dll>
		<os>Windows 7</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMSetMetaData" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="DRMVerify" deprecated="1">
		<dll>msdrm.dll</dll>
		<mitigation>The AD RMS SDK leveraging functionality exposed by the client in Msdrm.dll is available for use in Windows Server 2008, Windows Vista, Windows Server 2008 R2, Windows 7, Windows Server 2012, and Windows 8. It may be altered or unavailable in subsequent versions. Instead, use Active Directory Rights Management Services SDK 2.1, which leverages functionality exposed by the client in Msipc.dll.</mitigation>
	</api>
	<api name="NcFreeNetconProperties" deprecated="1">
		<dll>netshell.dll</dll>
		<os>Windows XP</os>
		<mitigation>Internet Connection Firewall may be altered or unavailable in subsequent versions. Instead, use the Windows Firewall API.</mitigation>
	</api>
	<api name="NcIsValidConnectionName" deprecated="1">
		<dll>netshell.dll</dll>
		<os>Windows XP</os>
		<mitigation>Internet Connection Firewall may be altered or unavailable in subsequent versions. Instead, use the Windows Firewall API.</mitigation>
	</api>
	<api name="GetCurrentThreadCompartmentId" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="GetNetworkInformation" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="GetSessionCompartmentId" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="SetCurrentThreadCompartmentId" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="SetNetworkInformation" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="SetSessionCompartmentId" deprecated="1">
		<dll>iphlpapi.dll</dll>
		<mitigation>Reserved for future use. Do not use this function.</mitigation>
	</api>
	<api name="EnumProtocolsW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The EnumProtocols function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. For the convenience of Windows Sockets 1.1 developers, the reference material is included. The WSAEnumProtocols function provides equivalent functionality in Windows Sockets 2.</mitigation>
	</api>
	<api name="EnumProtocolsA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The EnumProtocols function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. For the convenience of Windows Sockets 1.1 developers, the reference material is included. The WSAEnumProtocols function provides equivalent functionality in Windows Sockets 2.</mitigation>
	</api>
	<api name="GetAddressByNameW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>GetAddressByName is no longer available for use as of Windows Sockets 2. Instead, use the functions detailed in Protocol-Independent Name Resolution (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetAddressByNameA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>GetAddressByName is no longer available for use as of Windows Sockets 2. Instead, use the functions detailed in Protocol-Independent Name Resolution (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetNameByTypeW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetNameByType function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetNameByTypeA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetNameByType function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetServiceW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetService function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetServiceA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetService function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetTypeByNameW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetTypeByName function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="GetTypeByNameA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetTypeByName function is a Microsoft-specific extension to the Windows Sockets 1.1 specification. This function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="SetServiceW" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The SetService function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="SetServiceA" deprecated="1">
		<dll>mswsock.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The SetService function is obsolete. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2. The functions detailed in Protocol-Independent Name Resolution provide equivalent functionality in Windows Sockets 2 (https://learn.microsoft.com/en-us/windows/win32/winsock/protocol-independent-name-resolution-2).</mitigation>
	</api>
	<api name="LsaLookupPrivilegeValue" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Do not use this function. Instead, use LookupPrivilegeValue.</mitigation>
	</api>
	<api name="AccessNtmsLibraryDoor" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="AddNtmsMediaType" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="AllocateNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available for use as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="BeginNtmsDeviceChangeDetection" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CancelNtmsLibraryRequest" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CancelNtmsOperatorRequest" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="ChangeNtmsMediaType" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CleanNtmsDrive" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CloseNtmsNotification" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CloseNtmsSession" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CreateNtmsMediaW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CreateNtmsMediaA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CreateNtmsMediaPoolW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CreateNtmsMediaPoolA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeallocateNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DecommissionNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsDrive" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsLibrary" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsMediaPool" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsMediaType" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DeleteNtmsRequests" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DisableNtmsObject" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DismountNtmsDrive" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="DismountNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EjectDiskFromSADriveW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EjectDiskFromSADriveA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EjectNtmsCleaner" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EjectNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EnableNtmsObject" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EndNtmsDeviceChangeDetection" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="EnumerateNtmsObject" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="ExportNtmsDatabase" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsMediaPoolNameW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsMediaPoolNameA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsObjectAttributeW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsObjectAttributeA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsObjectInformationW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsObjectInformationA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsObjectSecurity" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsRequestOrder" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsUIOptionsW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetNtmsUIOptionsA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetVolumesFromDriveW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="GetVolumesFromDriveA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="IdentifyNtmsSlot" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="ImportNtmsDatabase" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="InjectNtmsCleaner" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="InjectNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="InventoryNtmsLibrary" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="MountNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="MoveToNtmsMediaPool" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="OpenNtmsNotification" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="OpenNtmsSessionW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="OpenNtmsSessionA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="ReleaseNtmsCleanerSlot" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="ReserveNtmsCleanerSlot" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SatisfyNtmsOperatorRequest" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsDeviceChangeDetection" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsMediaComplete" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsObjectAttributeW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsObjectAttributeA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsObjectInformationW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsObjectInformationA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsObjectSecurity" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsRequestOrder" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsUIOptionsW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SetNtmsUIOptionsA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SubmitNtmsOperatorRequestW" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SubmitNtmsOperatorRequestA" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="SwapNtmsMedia" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="UpdateNtmsOmidInfo" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="WaitForNtmsNotification" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="WaitForNtmsOperatorRequest" deprecated="1">
		<dll>ntmsapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Removable Storage Manager is no longer available as of Windows 7 and Windows Server 2008 R2.</mitigation>
	</api>
	<api name="CIBuildQueryNode" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CIBuildQueryTree" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CICreateCommand" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CIMakeICommand" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CIRestrictionToFullTree" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CIShutdown" deprecated="1">
		<dll>query.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported as of Windows 8.</mitigation>
	</api>
	<api name="CIState" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CITextToFullTree" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CITextToFullTreeEx" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CITextToSelectTree" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="CITextToSelectTreeEx" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="LocateCatalogsW" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="LocateCatalogsA" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="SetCatalogState" deprecated="1">
		<dll>ntquery.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Indexing Service is no longer supported as of Windows XP and is unavailable for use as of Windows 8. Instead, use Windows Search for client side search and Microsoft Search Server Express for server side search.</mitigation>
	</api>
	<api name="LsaLookupSids" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-0.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>LsaLookupSids is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use LsaLookupSids2.</mitigation>
	</api>
	<api name="LsaRetrievePrivateData" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-0.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Do not use the LSA private data functions. Instead, use the CryptProtectData and CryptUnprotectData functions.</mitigation>
	</api>
	<api name="LsaStorePrivateData" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-0.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-security-lsapolicy-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Do not use the LSA private data functions. Instead, use the CryptProtectData and CryptUnprotectData functions.</mitigation>
	</api>
	<api name="RtlDecryptMemory" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlDecryptMemory function is available for use in the Windows XP and Windows XP and Windows Server 2003 and Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. Instead, use the CryptUnprotectMemory function.</mitigation>
	</api>
	<api name="SystemFunction041" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlDecryptMemory function is available for use in the Windows XP and Windows XP and Windows Server 2003 and Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. Instead, use the CryptUnprotectMemory function.</mitigation>
	</api>
	<api name="RtlEncryptMemory" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlDecryptMemory function is available for use in the Windows XP and Windows XP and Windows Server 2003 and Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. Instead, use the CryptProtectMemory function.</mitigation>
	</api>
	<api name="SystemFunction040" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlDecryptMemory function is available for use in the Windows XP and Windows XP and Windows Server 2003 and Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. Instead, use the CryptProtectMemory function.</mitigation>
	</api>
	<api name="RtlGenRandom" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlGenRandom function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CryptGenRandom function.</mitigation>
	</api>
	<api name="SystemFunction036" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlGenRandom function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CryptGenRandom function.</mitigation>
	</api>
	<api name="CoInitialize" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-ole32-ie-l1-1-0.dll</dll>
		<dll>ole32_wp.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-1.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-2.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-3.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>New applications should call CoInitializeEx instead of CoInitialize.</mitigation>
	</api>
	<api name="CoInstall" deprecated="1">
		<dll>ole32.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="StgGetIFillLockBytesOnFile" deprecated="1">
		<dll>ole32.dll</dll>
		<mitigation>The StgGetIFillLockBytesOnFile function is obsolete. The function is available on versions of Windows prior to Windows 2000.</mitigation>
	</api>
	<api name="StgGetIFillLockBytesOnILockBytes" deprecated="1">
		<dll>ole32.dll</dll>
		<mitigation>The StgGetIFillLockBytesOnILockBytes function is obsolete. The function is available on versions of Windows prior to Windows 2000.</mitigation>
	</api>
	<api name="StgOpenAsyncDocfileOnIFillLockBytes" deprecated="1">
		<dll>ole32.dll</dll>
		<mitigation>The StgOpenAsyncDocfileOnIFillLockBytes function is obsolete. The function is available on versions of Windows prior to Windows 2000.</mitigation>
	</api>
	<api name="StgOpenLayoutDocfile" deprecated="1">
		<dll>dflayout.dll</dll>
		<mitigation>Do not use this function. Use the IStorage::CopyTo method instead. CopyTo can be used to layout a docfile, thus improving performance in most scenarios.</mitigation>
	</api>
	<api name="OleDraw" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-3.dll</dll>
		<dll>ext-ms-win-com-ole32-l1-1-4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use this function to draw into a metafile because it does not specify the parameter required for drawing into metafiles.</mitigation>
	</api>
	<api name="OleBuildVersion" deprecated="1">
		<dll>ole32.dll</dll>
		<mitigation>This function is obsolete.</mitigation>
	</api>
	<api name="PdhGetDllVersion" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and no longer supported.</mitigation>
	</api>
	<api name="PdhUpdateLogFileCatalog" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete.</mitigation>
	</api>
	<api name="CanUserWritePwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>CanUserWritePwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerSettingAccessCheck instead.</mitigation>
	</api>
	<api name="DeletePwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>DeletePwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerDeleteScheme instead.</mitigation>
	</api>
	<api name="EnumPwrSchemes" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>EnumPwrSchemes is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerEnumerate instead.</mitigation>
	</api>
	<api name="GetActivePwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetActivePwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerGetActiveScheme instead.</mitigation>
	</api>
	<api name="GetPwrDiskSpindownRange" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetPwrDiskSpindownRange is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, computers must support the soft off power state. Therefore, this function is relevant only to Windows Server 2003 and earlier operating systems.</mitigation>
	</api>
	<api name="IsPwrHibernateAllowed" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>IsPwrHibernateAllowed is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use GetPwrCapabilities instead.</mitigation>
	</api>
	<api name="IsPwrShutdownAllowed" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>IsPwrShutdownAllowed is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, computers must support the soft off power state. Therefore, this function is relevant only to Windows Server 2003 and earlier operating systems.</mitigation>
	</api>
	<api name="IsPwrSuspendAllowed" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>IsPwrSuspendAllowed is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use GetPwrCapabilities instead.</mitigation>
	</api>
	<api name="ReadGlobalPwrPolicy" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ReadGlobalPwrPolicy is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power read functions to retrieve individual settings.</mitigation>
	</api>
	<api name="ReadProcessorPwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ReadProcessorPwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, power management configuration of the system's processor is controlled through the GUID_PROCESSOR_SETTINGS_SUBGROUP power settings subgroup. Use the PowerEnumerate function to enumerate individual settings.</mitigation>
	</api>
	<api name="ReadPwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ReadPwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power read functions to retrieve individual settings.</mitigation>
	</api>
	<api name="SetActivePwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SetActivePwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use PowerSetActiveScheme instead.</mitigation>
	</api>
	<api name="WriteGlobalPwrPolicy" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>WriteGlobalPwrPolicy is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, use the PowerEnumerate function to enumerate power settings for a specified scheme and the power write functions to write individual settings.</mitigation>
	</api>
	<api name="WriteProcessorPwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>WriteProcessorPwrScheme is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Starting with Windows Vista, power management configuration of the system's processor is controlled through the GUID_PROCESSOR_SETTINGS_SUBGROUP power settings subgroup. Use the PowerEnumerate function to enumerate individual settings.</mitigation>
	</api>
	<api name="WritePwrScheme" deprecated="1">
		<dll>powrprof.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>WritePwrScheme is no longer available for use as of Windows Vista. Instead, use the PowerEnumerate function to enumerate power settings for a specified scheme, and the power write functions to write individual settings.</mitigation>
	</api>
	<api name="PSGetItemPropertyHandler" deprecated="1">
		<dll>propsys.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003 with SP1</os>
		<mitigation>This function is supported in Windows XP and Windows Vista. For applications supported only on Windows Vista or later, it is recommended that you use IShellItem2::GetPropertyStore instead of PSGetItemPropertyHandler. That method provides a richer set of properties in the property store that is returned.</mitigation>
	</api>
	<api name="PSGetItemPropertyHandlerWithCreateObject" deprecated="1">
		<dll>propsys.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003 with SP1</os>
		<mitigation>This function is supported in Windows XP as part of the Microsoft Windows Desktop Search (WDS) redistributable which includes IPropertyStore and supporting interfaces. For applications supported only on Windows Vista or later, we recommend that you use IShellItem2::GetPropertyStoreWithCreateObject instead of PSGetItemPropertyHandlerWithCreateObject because IShellItem2::GetPropertyStoreWithCreateObject provides a richer set of properties in the property store that is returned. This function is approximately equivalent to passing the GPS_HANDLERPROPERTIESONLY flag to IShellItem2::GetPropertyStoreWithCreateObject.</mitigation>
	</api>
	<api name="RasCreatePhonebookEntryW" deprecated="1">
		<dll>rasapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista and its functionality has been replaced by RasDialDlg.</mitigation>
	</api>
	<api name="RasCreatePhonebookEntryA" deprecated="1">
		<dll>rasapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista and its functionality has been replaced by RasDialDlg.</mitigation>
	</api>
	<api name="RasEditPhonebookEntryW" deprecated="1">
		<dll>rasapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista and its functionality has been replaced by RasEntryDlg.</mitigation>
	</api>
	<api name="RasEditPhonebookEntryA" deprecated="1">
		<dll>rasapi32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista and its functionality has been replaced by RasEntryDlg.</mitigation>
	</api>
	<api name="RasSetEntryDialParamsW" deprecated="1">
		<dll>rasapi32.dll</dll>
		<dll>ext-ms-win-ras-rasapi32-l1-1-0.dll</dll>
		<dll>ext-ms-win-ras-rasapi32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP or later: Do not use the RasSetEntryDialParams function. To set the credentials for a phone-book entry, use the RasSetCredentials function. Set the non-credential members of RASDIALPARAMS (for example szCallbackNumber, dwSubEntry, or dwCallbackId) directly in the RASDIALPARAMS structure passed as a parameter to the RasDial function.</mitigation>
	</api>
	<api name="RasSetEntryDialParamsA" deprecated="1">
		<dll>rasapi32.dll</dll>
		<dll>ext-ms-win-ras-rasapi32-l1-1-0.dll</dll>
		<dll>ext-ms-win-ras-rasapi32-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Windows XP or later: Do not use the RasSetEntryDialParams function. To set the credentials for a phone-book entry, use the RasSetCredentials function. Set the non-credential members of RASDIALPARAMS (for example szCallbackNumber, dwSubEntry, or dwCallbackId) directly in the RASDIALPARAMS structure passed as a parameter to the RasDial function.</mitigation>
	</api>
	<api name="DestroyAlternate" deprecated="1">
		<dll>inkobjcore.dll</dll>
		<os>Windows XP Tablet PC Edition</os>
		<mitigation>This function is obsolete and need not be implemented by custom application recognizers.</mitigation>
	</api>
	<api name="ClusterGetVolumeNameForVolumeMountPoint" deprecated="1">
		<dll>resutils.dll</dll>
		<os>Windows Server 2008 R2 Enterprise</os>
		<os>Windows Server 2008 R2 Datacenter</os>
		<mitigation>ClusterGetVolumeNameForVolumeMountPoint is available for use in the Windows Server 2008 R2 Enterprise and Windows Server 2008 R2 Datacenter operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetVolumeNameForVolumeMountPoint.</mitigation>
	</api>
	<api name="ClusterGetVolumePathName" deprecated="1">
		<dll>ext-ms-win-cluster-resutils-l1-1-0.dll</dll>
		<dll>ext-ms-win-cluster-resutils-l1-1-1.dll</dll>
		<os>Windows Server 2008 R2 Enterprise</os>
		<os>Windows Server 2008 R2 Datacenter</os>
		<mitigation>ClusterGetVolumePathName is available for use in the Windows Server 2008 R2 Enterprise and Windows Server 2008 R2 Datacenter operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetVolumePathName.</mitigation>
	</api>
	<api name="ClusterPrepareSharedVolumeForBackup" deprecated="1">
		<dll>resutils.dll</dll>
		<os>Windows Server 2008 R2 Enterprise</os>
		<os>Windows Server 2008 R2 Datacenter</os>
		<mitigation>ClusterPrepareSharedVolumeForBackup is available for use in the Windows Server 2008 R2 Enterprise and Windows Server 2008 R2 Datacenter operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="IsErrorPropagationEnabled" deprecated="1">
		<dll>runtimeobject.dll</dll>
		<dll>api-ms-win-core-winrt-error-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<dll>api-ms-win-core-winrt-error-l1-1-1.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>This function is deprecated. Going forward, all Windows 8.1 and Windows 10 apps can operate automatically as if error propagation is enabled, and do not need to check dynamically whether error propagation is enabled.</mitigation>
	</api>
	<api name="RpcAsyncRegisterInfo" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The RpcAsyncRegisterInfo function is obsolete.</mitigation>
	</api>
	<api name="RpcImpersonateClientContainer" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>RpcImpersonateClientContainer is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="RpcMgmtEpUnregister" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<mitigation>This function is supported only on Windows NT and Windows Me/98/95; it returns EPSCANTPERFORMOP on other versions of Windows.</mitigation>
	</api>
	<api name="RpcNsBindingInqEntryNameW" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingInqEntryNameA" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcRevertContainerImpersonation" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>RpcRevertContainerImpersonation is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrAsyncClientCall2" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>NdrAsyncClientCall2 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrClientCall3" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NdrClientCall3 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrClientCall4" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>NdrClientCall4 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrDcomAsyncClientCall" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>NdrDcomAsyncClientCall is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrDcomAsyncClientCall2" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>NdrDcomAsyncClientCall2 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrMesProcEncodeDecode4" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>NdrMesProcEncodeDecode4 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="RpcUserFree" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>RpcUserFree is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="RpcNsBindingExportW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingExportA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingExportPnPW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingExportPnPA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingImportBeginW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingImportBeginA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingImportDone" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingImportNext" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingLookupBeginW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingLookupBeginA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingLookupDone" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingLookupNext" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingSelect" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingUnexportW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingUnexportA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingUnexportPnPW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsBindingUnexportPnPA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryExpandNameW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryExpandNameA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryObjectInqBeginW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryObjectInqBeginA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryObjectInqDone" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsEntryObjectInqNext" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupDeleteW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupDeleteA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrAddW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrAddA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrInqBeginW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrInqBeginA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrInqDone" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrInqNextW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrInqNextA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrRemoveW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsGroupMbrRemoveA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtBindingUnexportW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtBindingUnexportA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryCreateW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryCreateA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryDeleteW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryDeleteA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryInqIfIdsW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtEntryInqIfIdsA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtHandleSetExpAge" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtInqExpAge" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsMgmtSetExpAge" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileDeleteW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileDeleteA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltAddW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltAddA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltInqBeginW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltInqBeginA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltInqDone" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltInqNextW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltInqNextA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltRemoveW" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="RpcNsProfileEltRemoveA" deprecated="1">
		<dll>rpcns4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported on Windows Vista and later operating systems.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer2_Connect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer2_Connect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer2_Disconnect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer2_Disconnect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer2_Release" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer2_Release is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_AddRef" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_AddRef is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_Connect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_Connect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_Disconnect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_Disconnect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_Invoke" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_Invoke is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_QueryInterface" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_QueryInterface is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdAsyncStubBuffer_Release" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdAsyncStubBuffer_Release is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer2_Connect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdStubBuffer2_Connect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer2_CountRefs" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdStubBuffer2_CountRefs is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer2_Disconnect" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdStubBuffer2_Disconnect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer2_QueryInterface" deprecated="1">
		<dll>ole32.dll</dll>
		<dll>api-ms-win-core-com-midlproxystub-l1-1-0.dll</dll>
		<dll>combase.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>CStdStubBuffer2_QueryInterface is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_AddRef" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_AddRef is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_Connect" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_Connect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_CountRefs" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_CountRefs is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_DebugServerQueryInterface" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_DebugServerQueryInterface is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_DebugServerRelease" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_DebugServerRelease is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_Disconnect" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_Disconnect is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_Invoke" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_Invoke is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_IsIIDSupported" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_IsIIDSupported is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CStdStubBuffer_QueryInterface" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CStdStubBuffer_QueryInterface is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrCStdStubBuffer2_Release" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IUnknownReleaseProxy is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NdrCStdStubBuffer_Release" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IUnknownReleaseProxy is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="SslCrackCertificate" deprecated="1">
		<dll>schannel.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The SslCrackCertificate function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CertCreateCertificateContext function.</mitigation>
	</api>
	<api name="SslFreeCertificate" deprecated="1">
		<dll>schannel.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The SslFreeCertificate function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the CertFreeCertificateContext function.</mitigation>
	</api>
	<api name="SetFileSecurityW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>api-ms-win-security-base-l1-1-0.dll</dll>
		<dll>api-ms-win-security-base-l1-2-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-security-base-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-security-base-l1-2-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Use the SetNamedSecurityInfo function instead.</mitigation>
	</api>
	<api name="IsDestinationReachableW" deprecated="1">
		<dll>sensapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Windows Vista and later, Windows Server 2008 and later: This function is not supported and always returns ERROR_CALL_NOT_IMPLEMENTED.</mitigation>
	</api>
	<api name="IsDestinationReachableA" deprecated="1">
		<dll>sensapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Windows Vista and later, Windows Server 2008 and later: This function is not supported and always returns ERROR_CALL_NOT_IMPLEMENTED.</mitigation>
	</api>
	<api name="IsNetworkAlive" deprecated="1">
		<dll>sensapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Starting with applications designed for Windows Vista and Windows Server 2008, developers should consider using the Network List Manager instead of this function (https://learn.microsoft.com/en-us/windows/win32/nla/portal).</mitigation>
	</api>
	<api name="InstallHinfSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="InstallHinfSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddInstallSectionToDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddInstallSectionToDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddSectionToDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddSectionToDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddToDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddToDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddToSourceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAddToSourceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAdjustDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupAdjustDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupBackupErrorW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupBackupErrorA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCancelTemporarySourceList" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCloseFileQueue" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCloseInfFile" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCloseLog" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-logging-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCommitFileQueueW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCommitFileQueueA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupConfigureWmiFromInfSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupConfigureWmiFromInfSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCopyErrorW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCopyErrorA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCopyOEMInfW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCopyOEMInfA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCreateDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupCreateDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDecompressOrCopyFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDecompressOrCopyFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDefaultQueueCallbackW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDefaultQueueCallbackA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDeleteErrorW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDeleteErrorA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDestroyDiskSpaceList" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDuplicateDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupDuplicateDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupEnumInfSectionsW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupEnumInfSectionsA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFindFirstLineW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFindFirstLineA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFindNextLine" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFindNextMatchLineW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFindNextMatchLineA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFreeSourceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupFreeSourceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetBinaryField" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFieldCount" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileCompressionInfoW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileCompressionInfoA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileCompressionInfoExW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileCompressionInfoExA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileQueueCount" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetFileQueueFlags" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetInfFileListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetInfFileListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetInfInformationW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetInfInformationA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetIntField" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineByIndexW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineByIndexA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineCountW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineCountA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineTextW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetLineTextA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetMultiSzFieldW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetMultiSzFieldA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceFileLocationW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceFileLocationA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceFileSizeW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceFileSizeA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceInfoW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetSourceInfoA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetStringFieldW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetStringFieldA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetTargetPathW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupGetTargetPathA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInitDefaultQueueCallback" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInitDefaultQueueCallbackEx" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInitializeFileLogW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInitializeFileLogA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFileExW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFileExA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFilesFromInfSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFilesFromInfSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFromInfSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallFromInfSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallServicesFromInfSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallServicesFromInfSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallServicesFromInfSectionExW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupInstallServicesFromInfSectionExA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupIterateCabinetW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupIterateCabinetA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-1.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupLogErrorW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-logging-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupLogErrorA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-logging-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupLogFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupLogFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenAppendInfFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenAppendInfFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenFileQueue" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenInfFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenInfFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-0.dll</dll>
		<dll>ext-ms-win-setupapi-inf-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenLog" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-logging-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupOpenMasterInf" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupPromptForDiskW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupPromptForDiskA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupPromptReboot" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryDrivesInDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryDrivesInDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryFileLogW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryFileLogA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfFileInformationW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfFileInformationA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfOriginalFileInformationW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfOriginalFileInformationA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfVersionInformationW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueryInfVersionInformationA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQuerySourceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQuerySourceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQuerySpaceRequiredOnDriveW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQuerySpaceRequiredOnDriveA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopyW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopyA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopyIndirectW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopyIndirectA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopySectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueCopySectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDefaultCopyW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDefaultCopyA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDeleteW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDeleteA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDeleteSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueDeleteSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueRenameW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueRenameA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueRenameSectionW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupQueueRenameSectionA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFileLogEntryW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFileLogEntryA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFromDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFromDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFromSourceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveFromSourceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveInstallSectionFromDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveInstallSectionFromDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveSectionFromDiskSpaceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRemoveSectionFromDiskSpaceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRenameErrorW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupRenameErrorA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupScanFileQueueW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupScanFileQueueA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetDirectoryIdW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetDirectoryIdA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetDirectoryIdExW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetDirectoryIdExA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetFileQueueAlternatePlatformW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetFileQueueAlternatePlatformA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetFileQueueFlags" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetPlatformPathOverrideW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetPlatformPathOverrideA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetSourceListW" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupSetSourceListA" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupTermDefaultQueueCallback" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupTerminateFileLog" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupUninstallNewlyCopiedInfs" deprecated="1">
		<dll>setupapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupUninstallOEMInfW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupUninstallOEMInfA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupVerifyInfFileW" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="SetupVerifyInfFileA" deprecated="1">
		<dll>setupapi.dll</dll>
		<dll>ext-ms-win-setupapi-classinstallers-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. SetupAPI should no longer be used for installing applications. Instead, use the Windows Installer for developing application installers. SetupAPI continues to be used for installing device drivers.</mitigation>
	</api>
	<api name="ExtractAssociatedIconExW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ExtractAssociatedIconEx is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="ExtractAssociatedIconExA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ExtractAssociatedIconEx is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="ShellMessageBoxW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-1.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ShellMessageBox is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="ShellMessageBoxA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-1.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ShellMessageBox is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHInvokePrinterCommandW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista. It is recommended that, in its place, you invoke verbs on printers through IContextMenu or ShellExecute.</mitigation>
	</api>
	<api name="SHInvokePrinterCommandA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated as of Windows Vista. It is recommended that, in its place, you invoke verbs on printers through IContextMenu or ShellExecute.</mitigation>
	</api>
	<api name="GetScaleFactorForDevice" deprecated="1">
		<dll>shcore.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-1.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-2.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>This function is not supported as of Windows 8.1. Use GetScaleFactorForMonitor instead.</mitigation>
	</api>
	<api name="RegisterScaleChangeNotifications" deprecated="1">
		<dll>shcore.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-1.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-2.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>This function is not supported as of Windows 8.1. Use RegisterScaleChangeEvent instead.</mitigation>
	</api>
	<api name="RevokeScaleChangeNotifications" deprecated="1">
		<dll>shcore.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-1.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-2.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>This function is not supported as of Windows 8.1. Use UnregisterScaleChangeEvent instead.</mitigation>
	</api>
	<api name="SetProcessDpiAwareness" deprecated="1">
		<dll>shcore.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-1.dll</dll>
		<dll>api-ms-win-shcore-scaling-l1-1-2.dll</dll>
		<os>Windows 8.1</os>
		<os>Windows Server 2012 R2</os>
		<mitigation>It is recommended that you set the process-default DPI awareness via application manifest. See Setting the default DPI awareness for a process for more information (https://learn.microsoft.com/en-us/windows/win32/hidpi/setting-the-default-dpi-awareness-for-a-process). Setting the process-default DPI awareness via API call can lead to unexpected application behavior.</mitigation>
	</api>
	<api name="DriveType" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>DriveType is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="GetFileNameFromBrowse" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="PathIsSlowW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathIsSlow is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathIsSlowA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathIsSlow is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathProcessCommand" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Processes a string that contains a command line and generates a suitably quoted string, with arguments attached if required.</mitigation>
	</api>
	<api name="PerUserInit" deprecated="1">
		<dll>mydocs.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHCreatePropSheetExtArray" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreatePropSheetExtArray is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHCreateQueryCancelAutoPlayMoniker" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Use CreateClassMoniker instead. Note that the CLSID used in the call to CreateClassMoniker must be application-defined. Do not call CreateClassMoniker with a system-defined CLSID.</mitigation>
	</api>
	<api name="SHLoadOLE" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Provided for backward compatibility. This function is available through Windows XP Service Pack 2 (SP2) and Windows
Server 2003. It is not supported as of Windows Vista.</mitigation>
	</api>
	<api name="SHOpenPropSheetW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHOpenPropSheet is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHOpenPropSheetA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHOpenPropSheet is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHRunControlPanel" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP with SP1</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported as of Windows Vista.</mitigation>
	</api>
	<api name="CIDLData_CreateFromIDArray" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CIDLData_CreateFromIDArray is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DAD_AutoScroll" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DAD_AutoScroll is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DAD_DragEnterEx" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADDragEnterEx is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_DragEnter instead.</mitigation>
	</api>
	<api name="DAD_DragEnterEx2" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADDragEnterEx2 is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_DragEnter instead.</mitigation>
	</api>
	<api name="DAD_DragLeave" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADDragLeave is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_DragLeave instead.</mitigation>
	</api>
	<api name="DAD_DragMove" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADDragMove is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_DragMove instead.</mitigation>
	</api>
	<api name="DAD_SetDragImage" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADSetDragImage is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_BeginDrag instead.</mitigation>
	</api>
	<api name="DAD_ShowDragImage" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>DADShowDragImage is available in Windows 2000 and Windows XP. It might be altered or unavailable in subsequent versions. Use ImageList_DragShowNolock instead.</mitigation>
	</api>
	<api name="ILLoadFromStream" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="ILLoadFromStreamEx" deprecated="1">
		<dll>windows.storage.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>ILLoadFromStreamEx(IStream*, PIDLIST_ABSOLUTE*) is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="IsNetDrive" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Use GetDriveType or WNetGetConnection instead.</mitigation>
	</api>
	<api name="IsUserAnAdmin" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>IsUserAnAdmin is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. This function is a wrapper for CheckTokenMembership. It is recommended to call that function directly to determine Administrator group status rather than calling IsUserAnAdmin.</mitigation>
	</api>
	<api name="OpenRegStream" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>OpenRegStream is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use SHOpenRegStream2 or SHOpenRegStream.</mitigation>
	</api>
	<api name="PathCleanupSpec" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathCleanupSpec is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathGetShortPath" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathGetShortPath is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathIsExe" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathIsExe is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathResolve" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PathResolve is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PickIconDlg" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>PickIconDlg is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PifMgr_CloseProperties" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PifMgr_CloseProperties is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PifMgr_GetProperties" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PifMgr_GetProperties is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PifMgr_OpenProperties" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PifMgr_OpenProperties is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PifMgr_SetProperties" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PifMgr_SetProperties is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="ReadCabinetState" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ReadCabinetState is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="RealDriveType" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>RealDriveType is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="RestartDialog" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="RestartDialogEx" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHAddFromPropSheetExtArray" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHAlloc" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Use CoTaskMemAlloc instead.</mitigation>
	</api>
	<api name="SHCloneSpecialIDList" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCloneSpecialIDList is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use SHGetSpecialFolderLocation.</mitigation>
	</api>
	<api name="SHCLSIDFromString" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Use CLSIDFromString instead.</mitigation>
	</api>
	<api name="SHCoCreateInstance" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellcom-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCoCreateInstance is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use CoCreateInstance.</mitigation>
	</api>
	<api name="SHCreateDirectory" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateDirectory is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHCreateDirectoryExW" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHCreateDirectoryExA" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHCreateFileExtractIconA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateFileExtractIcon is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHCreateFileExtractIconW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateFileExtractIcon is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHCreateShellItem" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP with SP1</os>
		<os>Windows Server 2003</os>
		<mitigation>It is recommended that you use SHCreateItemWithParent or SHCreateItemFromIDList instead of this function.</mitigation>
	</api>
	<api name="SHCreateStdEnumFmtEtc" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateStdEnumFmtEtc is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHDestroyPropSheetExtArray" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHDestroyPropSheetExtArray is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="Shell_GetCachedImageIndexW" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ShellGetCachedImageIndex is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use ShellGetCachedImageIndexA or Shell_GetCachedImageIndexW.</mitigation>
	</api>
	<api name="Shell_GetCachedImageIndexA" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ShellGetCachedImageIndex is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use ShellGetCachedImageIndexA or Shell_GetCachedImageIndexW.</mitigation>
	</api>
	<api name="Shell_GetImageLists" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="Shell_MergeMenus" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Shell_MergeMenus is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFindFiles" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFindFiles is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFind_InitMenuPopup" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFind_InitMenuPopup is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFlushSFCache" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFlushSFCache is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFormatDrive" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFormatDrive is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFree" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Use CoTaskMemFree instead.</mitigation>
	</api>
	<api name="SHGetAttributesFromDataObject" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHGetAttributesFromDataObject is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHGetFolderLocation" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderIDList. The CSIDL value is translated to its associated KNOWNFOLDERID and SHGetKnownFolderIDList is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.</mitigation>
	</api>
	<api name="SHGetFolderPathW" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<dll>bcrypt.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.</mitigation>
	</api>
	<api name="SHGetFolderPathA" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shell-shellfolders-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-0.dll</dll>
		<dll>ext-ms-win-shell32-shellfolders-l1-1-1.dll</dll>
		<dll>windows.storage.dll</dll>
		<dll>bcrypt.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.</mitigation>
	</api>
	<api name="SHGetMalloc" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>SHGetMalloc is available through Windows Vista and Windows Server 2003, but may be altered or unavailable in subsequent versions of the operating system or product. SHGetMalloc was introduced in Windows 95 and Microsoft Windows NT 4.0, but as of Windows 2000 it is no longer necessary. In its place, programs can call the equivalent (and easier to use) CoTaskMemAlloc and CoTaskMemFree. If you find an older reference document that suggests or even requires the use of SHGetMalloc, it is acceptable and encouraged to use CoTaskMemAlloc and CoTaskMemFree instead.</mitigation>
	</api>
	<api name="SHGetRealIDL" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHGetRealIDL is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHGetSetFolderCustomSettings" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHGetSetFolderCustomSettings is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHGetSetSettings" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHGetSetSettings is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHGetSpecialFolderLocation" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>api-ms-win-storage-exports-internal-l1-1-0.dll</dll>
		<dll>windows.storage.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SHGetSpecialFolderLocation is not supported and may be altered or unavailable in the future. Instead, use SHGetFolderLocation.</mitigation>
	</api>
	<api name="SHHandleUpdateImage" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHHandleUpdateImage is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHILCreateFromPath" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHILCreateFromPath is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications should use SHParseDisplayName instead.</mitigation>
	</api>
	<api name="SHLimitInputEdit" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHMapPIDLToSystemImageListIndex" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHMapPIDLToSystemImageListIndex is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHObjectProperties" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHObjectProperties is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHPropStgCreate" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHPropStgReadMultiple" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHPropStgWriteMultiple" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHReplaceFromPropSheetExtArray" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHRestricted" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHRestricted is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHSetFolderPathW" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-storage-exports-internal-l1-1-0.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Deprecated. As of Windows Vista, this function is merely a wrapper for SHSetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and SHSetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.</mitigation>
	</api>
	<api name="SHSetFolderPathA" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-storage-exports-internal-l1-1-0.dll</dll>
		<dll>windows.storage.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Deprecated. As of Windows Vista, this function is merely a wrapper for SHSetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and SHSetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.</mitigation>
	</api>
	<api name="SHShellFolderView_Message" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHShellFolderView_Message is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHStartNetConnectionDialogW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHStartNetConnectionDialog is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHStartNetConnectionDialogA" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHStartNetConnectionDialog is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHValidateUNC" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHValidateUNC is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SignalFileOpen" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SignalFileOpen is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="Win32DeleteFile" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Win32DeleteFile is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="WriteCabinetState" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>WriteCabinetState is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="ConnectToConnectionPoint" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="GetMenuPosFromID" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetMenuPosFromID is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PathRemoveBackslashW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveBackslash or PathCchRemoveBackslashEx function in its place.</mitigation>
	</api>
	<api name="PathRemoveBackslashA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveBackslash or PathCchRemoveBackslashEx function in its place.</mitigation>
	</api>
	<api name="PathRemoveExtensionW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveExtension in its place.</mitigation>
	</api>
	<api name="PathRemoveExtensionA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveExtension in its place.</mitigation>
	</api>
	<api name="PathRemoveFileSpecW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveFileSpec function in its place.</mitigation>
	</api>
	<api name="PathRemoveFileSpecA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-legacy-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. We recommend the use of the PathCchRemoveFileSpec function in its place.</mitigation>
	</api>
	<api name="SHAllocShared" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHAllocShared is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHAnsiToAnsi" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-unicodeansi-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Using this function incorrectly can compromise the security of your application. For example, if pszDst buffer is not large enough to contain the number of characters specified by cchBuf, a buffer overrun can occur. Buffer overruns can cause a denial of service attack against an application if an access violation occurs. In the worst case, a buffer overrun might allow an attacker to inject executable code into your process, especially if pszDst is a stack-based buffer. Note that the output string is silently truncated if the buffer is not large enough. This can result in canonicalization or other security vulnerabilities.</mitigation>
	</api>
	<api name="SHAnsiToUnicode" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-unicodeansi-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Using this function incorrectly can compromise the security of your application. For example, if pwszDst buffer is not large enough to contain the number of characters specified by cwchBuf, a buffer overrun can occur. Buffer overruns can cause a denial of service attack against an application if an access violation occurs. In the worst case, a buffer overrun might allow an attacker to inject executable code into your process, especially if pwszDst is a stack-based buffer. When copying an entire string, note that sizeof returns the number of bytes, which is not the correct value to use for the cwchBuf parameter. Instead, use sizeof(pwszDst)/sizeof(WCHAR). Note that this technique assumes that pwszDst is an array, not a pointer.</mitigation>
	</api>
	<api name="SHCreateStreamOnFileW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-stream-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateStreamOnFile is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use SHCreateStreamOnFileEx.</mitigation>
	</api>
	<api name="SHCreateStreamOnFileA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-stream-l1-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHCreateStreamOnFile is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use SHCreateStreamOnFileEx.</mitigation>
	</api>
	<api name="SHFormatDateTimeW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFormatDateTime is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFormatDateTimeA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFormatDateTime is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHFreeShared" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHFreeShared is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHGetInverseCMAP" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-1.dll</dll>
		<dll>ext-ms-win-shell-shlwapi-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHGetViewStatePropertyBag" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHGetViewStatePropertyBag is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHLockShared" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHLockShared is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SHMessageBoxCheckW" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHMessageBoxCheck is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Do not take any dangerous actions if the function returns either –1 or iDefault. If an error occurs when attempting to display the message box, SHMessageBoxCheck returns –1 or, in some cases, iDefault. Such errors can be caused by insufficient memory or resources. If you get one of these return values, you should be aware that the user did not necessarily see the dialog box and consequently did not positively agree to any action.</mitigation>
	</api>
	<api name="SHMessageBoxCheckA" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHMessageBoxCheck is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Do not take any dangerous actions if the function returns either –1 or iDefault. If an error occurs when attempting to display the message box, SHMessageBoxCheck returns –1 or, in some cases, iDefault. Such errors can be caused by insufficient memory or resources. If you get one of these return values, you should be aware that the user did not necessarily see the dialog box and consequently did not positively agree to any action.</mitigation>
	</api>
	<api name="SHOpenRegStreamW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-stream-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Opens a registry value and supplies a stream that can be used to read from or write to the value. This function has been replaced by SHOpenRegStream2. It is recommended that you use SHOpenRegStream2 at all times.</mitigation>
	</api>
	<api name="SHOpenRegStreamA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-stream-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Opens a registry value and supplies a stream that can be used to read from or write to the value. This function has been replaced by SHOpenRegStream2. It is recommended that you use SHOpenRegStream2 at all times.</mitigation>
	</api>
	<api name="SHRegGetBoolValueFromHKCUHKLM" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>shlwapi.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is no longer supported.</mitigation>
	</api>
	<api name="SHRegGetValueW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-registry-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-registry-l1-1-1.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>SHRegGetValue may be altered or unavailable in subsequent versions of the operating system or product. Use RegGetValue in its place.</mitigation>
	</api>
	<api name="SHRegGetValueA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-registry-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-registry-l1-1-1.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>SHRegGetValue may be altered or unavailable in subsequent versions of the operating system or product. Use RegGetValue in its place.</mitigation>
	</api>
	<api name="SHRegGetValueFromHKCUHKLM" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>api-ms-win-shcore-registry-l1-1-1.dll</dll>
		<dll>shcore.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is no longer supported.</mitigation>
	</api>
	<api name="SHSendMessageBroadcastW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHSendMessageBroadcastA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHStripMneumonicW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHStripMneumonicA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-0.dll</dll>
		<dll>api-ms-win-shlwapi-winrt-storage-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHUnicodeToAnsi" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-unicodeansi-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Using this function incorrectly can compromise the security of your application. For example, if pszDst buffer is not large enough to contain the number of characters specified by cchBuf, a buffer overrun can occur. Buffer overruns can cause a denial of service attack against an application if an access violation occurs. In the worst case, a buffer overrun might allow an attacker to inject executable code into your process, especially if pszDst is a stack-based buffer. In addition, the output string is silently truncated if it is too large for the buffer. This can cause canonicalization or other security vulnerabilities.</mitigation>
	</api>
	<api name="SHUnicodeToUnicode" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-0.dll</dll>
		<dll>shcore.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l2-1-1.dll</dll>
		<dll>api-ms-win-shcore-unicodeansi-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Using this function incorrectly can compromise the security of your application. For example, if pwzDst buffer is not large enough to contain the number of characters specified by cwchBuf, a buffer overrun can occur. Buffer overruns can cause a denial of service attack against an application if an access violation occurs. In the worst case, a buffer overrun might allow an attacker to inject executable code into your process, especially if pwzDst is a stack-based buffer. When copying an entire string, note that sizeof returns the number of bytes, which is not the correct value to use for the cwchBuf parameter. Instead, use sizeof(pwzDst)/sizeof(WCHAR). Note that this technique assumes that pwzDst is an array, not a pointer. Note also that the function silently truncates the output string if the buffer is not large enough. This can result in canonicalization or other security vulnerabilities.</mitigation>
	</api>
	<api name="SHUnlockShared" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHUnlockShared is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="StopWatchFlush" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>StopWatchFlush is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="StopWatchMode" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>StopWatchMode is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="StrCatBuffW" insecure="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The final string is not guaranteed to be null-terminated. Consider using one of the following alternatives: StringCbCat, StringCbCatEx, StringCbCatN, StringCbCatNEx, StringCchCat, StringCchCatEx, StringCchCatN, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrCatBuffA" insecure="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The final string is not guaranteed to be null-terminated. Consider using one of the following alternatives: StringCbCat, StringCbCatEx, StringCbCatN, StringCbCatNEx, StringCchCat, StringCchCatEx, StringCchCatN, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrCatChainW" insecure="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The final string is not guaranteed to be null-terminated. Consider using one of the following alternatives: StringCbCatEx, StringCbCatNEx, StringCchCatEx, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrCatW" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The first argument, psz1, must be large enough to hold psz2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if psz1 is a stack-based buffer. Consider using one of the following alternatives: StringCbCat, StringCbCatEx, StringCbCatN, StringCbCatNEx, StringCchCat, StringCchCatEx, StringCchCatN, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrCpyNW" insecure="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-shlwapi-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The copied string is not guaranteed to be null-terminated. Consider using one of the following alternatives. StringCbCopy, StringCbCopyEx, StringCbCopyN, StringCbCopyNEx, StringCchCopy, StringCchCopyEx, StringCchCopyN, StringCchCopyNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrCpyW" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The first argument, psz1, must be large enough to hold psz2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if psz1 is a stack-based buffer. Consider using one of the following alternatives: StringCbCopy, StringCbCopyEx, StringCbCopyN, StringCbCopyNEx, StringCchCopy, StringCchCopyEx, StringCchCopyN, or StringCchCopyNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrNCatW" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The first argument, psz1, must be large enough to hold psz2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if psz1 is a stack-based buffer. Be aware that the last argument, cchMax, is the number of characters to copy into psz1, not necessarily the size of the psz1 in bytes. Consider using one of the following alternatives. StringCbCat, StringCbCatEx, StringCbCatN, StringCbCatNEx, StringCchCat, StringCchCatEx, StringCchCatN, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="StrNCatA" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The first argument, psz1, must be large enough to hold psz2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if psz1 is a stack-based buffer. Be aware that the last argument, cchMax, is the number of characters to copy into psz1, not necessarily the size of the psz1 in bytes. Consider using one of the following alternatives. StringCbCat, StringCbCatEx, StringCbCatN, StringCbCatNEx, StringCchCat, StringCchCatEx, StringCchCatN, or StringCchCatNEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="UrlFixupW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<dll>api-ms-win-core-url-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-shlwapi-l1-1-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>UrlFixupW is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="WhichPlatform" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>WhichPlatform is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="wnsprintfW" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The copied string is not guaranteed to be null-terminated. Consider using one of the following alternatives. StringCbPrintf, StringCbPrintfEx, StringCbVPrintf, StringCbVPrintfEx, StringCchPrintf, StringCchPrintfEx, StringCchVPrintf, or StringCchVPrintfEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="wnsprintfA" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The copied string is not guaranteed to be null-terminated. Consider using one of the following alternatives. StringCbPrintf, StringCbPrintfEx, StringCbVPrintf, StringCbVPrintfEx, StringCchPrintf, StringCchPrintfEx, StringCchVPrintf, or StringCchVPrintfEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="wvnsprintfW" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The copied string is not guaranteed to be null-terminated. Consider using one of the following alternatives. StringCbPrintf, StringCbPrintfEx, StringCbVPrintf, StringCbVPrintfEx, StringCchPrintf, StringCchPrintfEx, StringCchVPrintf, or StringCchVPrintfEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="wvnsprintfA" insecure="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. The copied string is not guaranteed to be null-terminated. Consider using one of the following alternatives. StringCbPrintf, StringCbPrintfEx, StringCbVPrintf, StringCbVPrintfEx, StringCchPrintf, StringCchPrintfEx, StringCchVPrintf, or StringCchVPrintfEx. You should review Security Considerations: Microsoft Windows Shell before continuing (https://learn.microsoft.com/en-us/windows/win32/shell/sec-shell).</mitigation>
	</api>
	<api name="SHSimpleIDListFromPath" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-1.dll</dll>
		<dll>ext-ms-win-shell-shell32-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Returns a pointer to an ITEMIDLIST structure when passed a path. This function is available through Windows 7 and Windows Server 2003. It is possible that it will not be present in future versions of Windows. Alternatives: (a) Call SHGetDesktopFolder to obtain IShellFolder for the desktop folder. (b) Get the IShellFolder's bind context (IBindCtx). (c) Call IShellFolder::ParseDisplayName with the IBindCtx and the path.</mitigation>
	</api>
	<api name="SnmpExtensionClose" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionInit" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionInitEx" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionMonitor" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionQuery" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionQueryEx" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpExtensionTrap" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSvcGetUptime" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSvcSetLogLevel" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSvcSetLogType" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilAsnAnyCpy" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilAsnAnyFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilDbgPrint" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilIdsToA" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilMemAlloc" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilMemFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilMemReAlloc" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOctetsCmp" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOctetsCpy" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOctetsFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOctetsNCmp" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidAppend" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidCmp" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidCpy" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidNCmp" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilOidToA" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilPrintAsnAny" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilPrintOid" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilVarBindCpy" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilVarBindFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilVarBindListCpy" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpUtilVarBindListFree" deprecated="1">
		<dll>snmpapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="uaw_wcslen" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future. Applications should use the wcslen function.</mitigation>
	</api>
	<api name="CompareStringEx" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Using CompareStringEx incorrectly can compromise the security of your application. Strings that are not compared correctly can produce invalid input. Test strings to make sure they are valid before using them, and provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="CompareStringW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>api-ms-win-deprecated-apis-obsolete-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using CompareString incorrectly can compromise the security of your application. Strings that are not compared correctly can produce invalid input. For example, the function can raise security issues when used for a non-linguistic comparison, because two strings that are distinct in their binary representation can be linguistically equivalent. The application should test strings for validity before using them, and should provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="CompareStringA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>api-ms-win-deprecated-apis-obsolete-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using CompareString incorrectly can compromise the security of your application. Strings that are not compared correctly can produce invalid input. For example, the function can raise security issues when used for a non-linguistic comparison, because two strings that are distinct in their binary representation can be linguistically equivalent. The application should test strings for validity before using them, and should provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="FoldStringW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using FoldString incorrectly can compromise the security of your application. Strings that are not mapped correctly can produce invalid input. Test strings to make sure they are valid before using them and provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="FoldStringA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using FoldString incorrectly can compromise the security of your application. Strings that are not mapped correctly can produce invalid input. Test strings to make sure they are valid before using them and provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="GetStringTypeExW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-deprecated-apis-legacy-l1-1-0.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-deprecated-apis-legacy-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the GetStringTypeEx function incorrectly can compromise the security of your application. To avoid a buffer overflow, the application must set the output buffer size correctly. For more security information, see Security Considerations: Windows User Interface (https://learn.microsoft.com/en-us/windows/win32/appuistart/sec-ui).</mitigation>
	</api>
	<api name="GetStringTypeExA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-deprecated-apis-legacy-l1-1-0.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-deprecated-apis-legacy-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the GetStringTypeEx function incorrectly can compromise the security of your application. To avoid a buffer overflow, the application must set the output buffer size correctly. For more security information, see Security Considerations: Windows User Interface (https://learn.microsoft.com/en-us/windows/win32/appuistart/sec-ui).</mitigation>
	</api>
	<api name="GetStringTypeW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the GetStringTypeW function incorrectly can compromise the security of your application. To avoid a buffer overflow, the application must set the output buffer size correctly. For more security information, see Security Considerations: Windows User Interface (https://learn.microsoft.com/en-us/windows/win32/appuistart/sec-ui).</mitigation>
	</api>
	<api name="MultiByteToWideChar" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the MultiByteToWideChar function incorrectly can compromise the security of your application. Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by lpMultiByteStr equals the number of bytes in the string, while the size of the output buffer indicated by lpWideCharStr equals the number of characters. To avoid a buffer overrun, your application must specify a buffer size appropriate for the data type the buffer receives. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="WideCharToMultiByte" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the WideCharToMultiByte function incorrectly can compromise the security of your application. Calling this function can easily cause a buffer overrun because the size of the input buffer indicated by lpWideCharStr equals the number of characters in the Unicode string, while the size of the output buffer indicated by lpMultiByteStr equals the number of bytes. To avoid a buffer overrun, your application must specify a buffer size appropriate for the data type the buffer receives. Data converted from UTF-16 to non-Unicode encodings is subject to data loss, because a code page might not be able to represent every character used in the specific Unicode data. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="GetVersion" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-0.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-1.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>GetVersion may be altered or unavailable for releases after Windows 8.1. Instead, use the Version Helper functions (https://learn.microsoft.com/en-us/windows/win32/sysinfo/version-helper-apis). For Windows 10 apps, please see Targeting your applications for Windows (https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1).</mitigation>
	</api>
	<api name="GetVersionExW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-0.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-1.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>GetVersionExA may be altered or unavailable for releases after Windows 8.1. Instead, use the Version Helper functions (https://learn.microsoft.com/en-us/windows/win32/sysinfo/version-helper-apis). For Windows 10 apps, please see Targeting your applications for Windows (https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1).</mitigation>
	</api>
	<api name="GetVersionExA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-0.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-1.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>GetVersionExA may be altered or unavailable for releases after Windows 8.1. Instead, use the Version Helper functions (https://learn.microsoft.com/en-us/windows/win32/sysinfo/version-helper-apis). For Windows 10 apps, please see Targeting your applications for Windows (https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1).</mitigation>
	</api>
	<api name="GetWindowsDirectoryW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-0.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-1.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see ShGetFolderPath.</mitigation>
	</api>
	<api name="GetWindowsDirectoryA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-0.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-1.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-sysinfo-l1-2-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see ShGetFolderPath.</mitigation>
	</api>
	<api name="TTRunValidationTests" deprecated="1">
		<dll>t2embed.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function was supported in Windows XP and earlier, but is no longer supported. In Windows Vista and later, this function will always return EAPINOTIMPL, and no processing is performed by this API.</mitigation>
	</api>
	<api name="TTRunValidationTestsEx" deprecated="1">
		<dll>t2embed.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function was supported in Windows XP and earlier, but is no longer supported. In Windows Vista and later, this function will always return EAPINOTIMPL, and no processing is performed by this API.</mitigation>
	</api>
	<api name="lineInitialize" deprecated="1">
		<dll>tapi32.dll</dll>
		<dll>ext-ms-win-ras-tapi32-l1-1-0.dll</dll>
		<mitigation>The lineInitialize function is obsolete. It continues to be exported by Tapi.dll and Tapi32.dll for backward compatibility with applications using API versions 1.3 and 1.4. Applications using API version 2.0 or later must use lineInitializeEx instead.</mitigation>
	</api>
	<api name="phoneInitialize" deprecated="1">
		<dll>tapi32.dll</dll>
		<mitigation>The phoneInitialize function is obsolete. It continues to be exported by Tapi.dll and Tapi32.dll for backward compatibility with applications using TAPI versions 1.3 and 1.4. Applications using TAPI version 2.0 or later must use phoneInitializeEx instead.</mitigation>
	</api>
	<api name="tapiRequestDrop" deprecated="1">
		<dll>tapi32.dll</dll>
		<mitigation>The tapiRequestDrop function is nonfunctional and obsolete for all classes of Windows-based applications. It should not be used.</mitigation>
	</api>
	<api name="DeleteTimerQueue" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and has been replaced by the DeleteTimerQueueEx function.</mitigation>
	</api>
	<api name="TxfGetThreadMiniVersionForCreate" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows 10 Build 20348</os>
		<os>Windows 10 Build 20348</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="TxfLogCreateFileReadContext" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows Vista with SP1</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="TxfLogCreateRangeReadContext" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows 10 Build 20348</os>
		<os>Windows 10 Build 20348</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="TxfLogDestroyReadContext" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows Vista with SP1</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="TxfLogReadRecords" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows Vista with SP1</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="TxfSetThreadMiniVersionForCreate" deprecated="1">
		<dll>txfw32.dll</dll>
		<os>Windows 10 Build 20348</os>
		<os>Windows 10 Build 20348</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="DockPattern_SetDockPosition" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ExpandCollapsePattern_Collapse" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ExpandCollapsePattern_Expand" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="GridPattern_GetItem" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="InvokePattern_Invoke" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ItemContainerPattern_FindItemByProperty" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="LegacyIAccessiblePattern_DoDefaultAction" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="LegacyIAccessiblePattern_GetIAccessible" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="LegacyIAccessiblePattern_Select" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="LegacyIAccessiblePattern_SetValue" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="MultipleViewPattern_GetViewName" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="MultipleViewPattern_SetCurrentView" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="RangeValuePattern_SetValue" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ScrollItemPattern_ScrollIntoView" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ScrollPattern_Scroll" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ScrollPattern_SetScrollPercent" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="SelectionItemPattern_AddToSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="SelectionItemPattern_RemoveFromSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="SelectionItemPattern_Select" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="SynchronizedInputPattern_Cancel" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="SynchronizedInputPattern_StartListening" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_GetSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_GetVisibleRanges" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_get_DocumentRange" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_get_SupportedTextSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_RangeFromChild" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextPattern_RangeFromPoint" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_AddToSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_Clone" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_Compare" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_CompareEndpoints" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_ExpandToEnclosingUnit" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_FindAttribute" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_FindText" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_GetAttributeValue" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_GetBoundingRectangles" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_GetChildren" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_GetEnclosingElement" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_GetText" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_Move" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_MoveEndpointByRange" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_MoveEndpointByUnit" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_RemoveFromSelection" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_ScrollIntoView" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TextRange_Select" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TogglePattern_Toggle" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TransformPattern_Move" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TransformPattern_Resize" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="TransformPattern_Rotate" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaAddEvent" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaEventAddWindow" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaEventRemoveWindow" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaFind" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetErrorDescription" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetPatternProvider" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetPropertyValue" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetRootNode" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetRuntimeId" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaGetUpdatedCache" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaHPatternObjectFromVariant" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaHTextRangeFromVariant" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaHUiaNodeFromVariant" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaLookupId" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<dll>ext-ms-win-uiacore-l1-1-0.dll</dll>
		<dll>ext-ms-win-uiacore-l1-1-1.dll</dll>
		<dll>ext-ms-win-uiacore-l1-1-2.dll</dll>
		<dll>ext-ms-win-uiacore-l1-1-3.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNavigate" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNodeFromFocus" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNodeFromHandle" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNodeFromPoint" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNodeFromProvider" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaNodeRelease" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaPatternRelease" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaRectIsEmpty" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaRectSetEmpty" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaRegisterProviderCallback" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaRemoveEvent" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaSetFocus" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="UiaTextRangeRelease" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="ValuePattern_SetValue" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="VirtualizedItemPattern_Realize" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows 7</os>
		<os>Windows Vista with SP2 and Platform Update for Windows Vista</os>
		<os>Windows XP with SP3 and Platform Update for Windows Vista</os>
		<os>Windows Server 2008 R2</os>
		<os>Windows Server 2008 with SP2 and Platform Update for Windows Server 2008</os>
		<os>Windows Server 2003 with SP2 and Platform Update for Windows Server 2008</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="WindowPattern_Close" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="WindowPattern_SetWindowVisualState" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="WindowPattern_WaitForInputIdle" deprecated="1">
		<dll>uiautomationcore.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is deprecated. Client applications should use the Microsoft UI Automation Component Object Model (COM) interfaces instead.</mitigation>
	</api>
	<api name="IUnknown_AddRef_Proxy" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IUnknownAddRefProxy is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="IUnknown_QueryInterface_Proxy" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IUnknownQueryInterfaceProxy is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="IUnknown_Release_Proxy" deprecated="1">
		<dll>rpcrt4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IUnknownReleaseProxy is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="DrawThemeBackgroundEx" deprecated="1">
		<dll>uxtheme.dll</dll>
		<dll>ext-ms-win-uxtheme-themes-l1-1-1.dll</dll>
		<dll>xamlpalwp.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DrawThemeBackgroundEx is available for use in the Windows Vista and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="VDMEnumProcessWOW" deprecated="1">
		<dll>vdmdbg.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="VDMEnumTaskWOWEx" deprecated="1">
		<dll>vdmdbg.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="CreateWriterEx" deprecated="1">
		<dll>ext-ms-win-fs-vssapi-l1-1-0.dll</dll>
		<dll>vssapi.dll</dll>
		<mitigation>Do not use this function directly. To create a VSS writer, extend the CVssWriterEx class. The CVssWriterEx base class implicitly calls CreateWriterEx.</mitigation>
	</api>
	<api name="CopyFileTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CopyFileTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateDirectoryTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateDirectoryTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateFileTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateFileTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateHardLinkTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateHardLinkTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateSymbolicLinkTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateSymbolicLinkTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="CreateUmsCompletionList" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="CreateUmsThreadContext" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="DeleteFileTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="DeleteFileTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="DeleteUmsCompletionList" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="DeleteUmsThreadContext" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="DequeueUmsCompletionListItems" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="EnterUmsSchedulingMode" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="ExecuteUmsThread" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="FindFirstFileNameTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="FindFirstFileTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="FindFirstFileTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="FindFirstStreamTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetAtomNameW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-atoms-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes not correctly specifying the size of the lpBuffer parameter.</mitigation>
	</api>
	<api name="GetAtomNameA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-atoms-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes not correctly specifying the size of the lpBuffer parameter.</mitigation>
	</api>
	<api name="GetCompressedFileSizeTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetCompressedFileSizeTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetCurrentUmsThread" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="GetFileAttributesTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetFileAttributesTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetFullPathNameTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetFullPathNameTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetLongPathNameTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetLongPathNameTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="GetNextUmsListItem" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="GetPrivateProfileIntW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileIntA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileSectionW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit applications written for Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileSectionA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit applications written for Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileSectionNamesW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileSectionNamesA" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileStringW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileStringA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileStructW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetPrivateProfileStructA" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileIntW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileIntA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileSectionW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileSectionA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileStringW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications, therefore this function should not be called from server code. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetProfileStringA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows-based applications, therefore this function should not be called from server code. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="GetUmsCompletionListEvent" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="GetUmsSystemThreadInformation" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 with SP1</os>
		<os>Windows 7 (64-bit only) and Windows Server 2008 R2 with KB977165 installed</os>
		<os>Windows Server 2008 R2 with SP1</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="GlobalAlloc" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalFlags" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. New applications should use the heap functions (https://learn.microsoft.com/en-us/windows/win32/memory/heap-functions).</mitigation>
	</api>
	<api name="GlobalFree" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalGetAtomNameW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-atoms-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes not correctly specifying the size of the lpBuffer parameter. Also, note that a global atom is accessible by anyone; thus, privacy and the integrity of its contents is not assured.</mitigation>
	</api>
	<api name="GlobalGetAtomNameA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-atoms-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes not correctly specifying the size of the lpBuffer parameter. Also, note that a global atom is accessible by anyone; thus, privacy and the integrity of its contents is not assured.</mitigation>
	</api>
	<api name="GlobalHandle" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalLock" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalReAlloc" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalSize" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="GlobalUnlock" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The global functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a global function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="IsBadCodePtr" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use.</mitigation>
	</api>
	<api name="IsBadReadPtr" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use.</mitigation>
	</api>
	<api name="IsBadStringPtrW" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use.</mitigation>
	</api>
	<api name="IsBadStringPtrA" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use.</mitigation>
	</api>
	<api name="IsBadWritePtr" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete and should not be used. Despite its name, it does not guarantee that the pointer is valid or that the memory pointed to is safe to use.</mitigation>
	</api>
	<api name="LoadModule" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the CreateProcess function.</mitigation>
	</api>
	<api name="LocalAlloc" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalFlags" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. New applications should use the heap functions (https://learn.microsoft.com/en-us/windows/win32/memory/heap-functions).</mitigation>
	</api>
	<api name="LocalFree" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalHandle" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalLock" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalReAlloc" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalSize" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="LocalUnlock" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-heap-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-heap-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The local functions have greater overhead and provide fewer features than other memory management functions. New applications should use the heap functions unless documentation states that a local function should be used. For more information, see Global and Local Functions (https://learn.microsoft.com/en-us/windows/win32/memory/global-and-local-functions).</mitigation>
	</api>
	<api name="lstrcatW" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Warning Do not use. Consider using StringCchCat instead. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition. The first argument, lpString1, must be large enough to hold lpString2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if lpString1 is a stack-based buffer. Consider using one of the following alternatives: StringCbCat or StringCchCat.</mitigation>
	</api>
	<api name="lstrcatA" insecure="1" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Warning Do not use. Consider using StringCchCat instead. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition. The first argument, lpString1, must be large enough to hold lpString2 and the closing '\0', otherwise a buffer overrun may occur. Buffer overruns may lead to a denial of service attack against the application if an access violation occurs. In the worst case, a buffer overrun may allow an attacker to inject executable code into your process, especially if lpString1 is a stack-based buffer. Consider using one of the following alternatives: StringCbCat or StringCchCat.</mitigation>
	</api>
	<api name="lstrcpyW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using StringCchCopy instead. Using this function incorrectly can compromise the security of your application. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition.</mitigation>
	</api>
	<api name="lstrcpyA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using StringCchCopy instead. Using this function incorrectly can compromise the security of your application. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition.</mitigation>
	</api>
	<api name="lstrcpynW" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using StringCchCopy instead. Using this function incorrectly can compromise the security of your application. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition.</mitigation>
	</api>
	<api name="lstrcpynA" insecure="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-string-obsolete-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using StringCchCopy instead. Using this function incorrectly can compromise the security of your application. This function uses structured exception handling (SEH) to catch access violations and other errors. When this function catches SEH errors, it returns NULL without null-terminating the string and without notifying the caller of the error. The caller is not safe to assume that insufficient space is the error condition.</mitigation>
	</api>
	<api name="MoveFileTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="MoveFileTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="QueryUmsThreadInformation" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="RemoveDirectoryTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="RemoveDirectoryTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-transacted-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="RequestWakeupLatency" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>RequestWakeupLatency is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="SetFileAttributesTransactedW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="SetFileAttributesTransactedA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Microsoft strongly recommends developers utilize alternative means to achieve your application's needs. Many scenarios that TxF was developed for can be achieved through simpler and more readily available techniques. Furthermore, TxF may not be available in future versions of Microsoft Windows. For more information, and alternatives to TxF, please see Alternatives to using Transactional NTFS (https://learn.microsoft.com/en-us/windows/win32/fileio/deprecation-of-txf).</mitigation>
	</api>
	<api name="SetFileSecurityA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>api-ms-win-security-base-l1-1-0.dll</dll>
		<dll>api-ms-win-security-base-l1-2-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-security-base-ansi-l1-1-0.dll</dll>
		<dll>api-ms-win-security-base-l1-2-1.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is obsolete. Use the SetNamedSecurityInfo function instead.</mitigation>
	</api>
	<api name="SetSystemPowerState" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SetSystemPowerState is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Applications written for Windows Vista and later should use SetSuspendState instead.</mitigation>
	</api>
	<api name="SetUmsThreadInformation" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="UmsThreadYield" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-ums-l1-1-0.dll</dll>
		<os>Windows 7 (64-bit only)</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>As of Windows 11, user-mode scheduling is not supported. All calls fail with the error ERRORNOTSUPPORTED.</mitigation>
	</api>
	<api name="VerifyVersionInfoW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated for Windows 10. See targeting your applications for Windows for more information (https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1).</mitigation>
	</api>
	<api name="VerifyVersionInfoA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been deprecated for Windows 10. See targeting your applications for Windows for more information (https://learn.microsoft.com/en-us/windows/win32/sysinfo/targeting-your-application-at-windows-8-1).</mitigation>
	</api>
	<api name="WinExec" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is provided only for compatibility with 16-bit Windows. Applications should use the CreateProcess function.</mitigation>
	</api>
	<api name="WritePrivateProfileSectionW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WritePrivateProfileSectionA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WritePrivateProfileStringW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WritePrivateProfileStringA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-privateprofile-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WritePrivateProfileStructW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WritePrivateProfileStructA" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WriteProfileSectionW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WriteProfileSectionA" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WriteProfileStringW" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="WriteProfileStringA" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should store initialization information in the registry.</mitigation>
	</api>
	<api name="_lclose" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>iexpress.exe</dll>
		<dll>wextract.exe</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-2.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<mitigation>This function is provided for compatibility with 16-bit versions of Windows. Win32-based applications should use the CloseHandle function.</mitigation>
	</api>
	<api name="_lcreat" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-2.dll</dll>
		<mitigation>This function is provided for compatibility with 16-bit versions of Windows. New applications should use the CreateFile function.</mitigation>
	</api>
	<api name="_llseek" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-2.dll</dll>
		<mitigation>This function is provided for compatibility with 16-bit versions of Windows. New applications should use the SetFilePointer function.</mitigation>
	</api>
	<api name="_lwrite" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-private-l1-1-2.dll</dll>
		<mitigation>This function is provided for compatibility with 16-bit versions of Windows. New applications should use the WriteFile function.</mitigation>
	</api>
	<api name="CredRenameW" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>CredRename is no longer supported. Starting with Windows Vista, calls to CredRename always return ERRORNOT_SUPPORTED.</mitigation>
	</api>
	<api name="CredRenameA" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>CredRename is no longer supported. Starting with Windows Vista, calls to CredRename always return ERRORNOT_SUPPORTED.</mitigation>
	</api>
	<api name="CertAlgIdToOID" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Use the CryptFindOIDInfo function instead of this function because ALG_ID identifiers are no longer supported in CNG. Use the CRYPT_OID_INFO_CNG_ALGID_KEY value in the dwKeyType parameter of the CryptFindOIDInfo function instead.</mitigation>
	</api>
	<api name="CertOIDToAlgId" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Use the CryptFindOIDInfo function instead of this function because ALG_ID identifiers are no longer supported in CNG. Use the CRYPT_OID_INFO_OID_KEY value in the dwKeyType parameter of the CryptFindOIDInfo function instead.</mitigation>
	</api>
	<api name="CryptAcquireContextW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptAcquireContextA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptContextAddRef" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptCreateHash" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptCreateKeyIdentifierFromCSP" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptDecrypt" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptDeriveKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptDestroyHash" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptDestroyKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptDuplicateKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEncrypt" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEnumKeyIdentifierProperties" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEnumProvidersW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEnumProvidersA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEnumProviderTypesW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptEnumProviderTypesA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptExportKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptExportPKCS8" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptExportPKCS8 function is no longer available for use as of Windows Server 2008 and Windows Vista. Instead, use the PFXExportCertStoreEx function.</mitigation>
	</api>
	<api name="CryptExportPKCS8Ex" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptExportPKCS8Ex function is no longer available for use as of Windows Server 2008 and Windows Vista. Instead, use the PFXExportCertStoreEx function.</mitigation>
	</api>
	<api name="CryptGenKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGenRandom" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetDefaultProviderW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetDefaultProviderA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetHashParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetKeyIdentifierProperty" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetKeyParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetProvParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptGetUserKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptHashCertificate" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptHashData" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptHashPublicKeyInfo" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptHashSessionKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptHashToBeSigned" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptImportKey" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptImportPKCS8" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptImportPKCS8 function is no longer available for use as of Windows Server 2008 and Windows Vista. Instead, use the PFXImportCertStore function.</mitigation>
	</api>
	<api name="CryptImportPublicKeyInfo" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptImportPublicKeyInfoEx" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptInstallDefaultContext" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptQueryObject" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptReleaseContext" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetHashParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetKeyIdentifierProperty" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetKeyParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetProviderW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetProviderA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetProviderExW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetProviderExA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSetProvParam" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSignHashW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptSignHashA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptUninstallDefaultContext" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptVerifySignatureW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="CryptVerifySignatureA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-security-cryptoapi-l1-1-0.dll</dll>
		<dll>cryptsp.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. New and existing software should start using Cryptography Next Generation APIs (https://learn.microsoft.com/en-us/windows/win32/seccng/cng-portal). Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="GetEncSChannel" deprecated="1">
		<dll>instrsa5.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The GetEncSChannel function is no longer available for use as of Windows Server 2003 and Windows XP.</mitigation>
	</api>
	<api name="PFXExportCertStore" deprecated="1">
		<dll>crypt32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This is an old function kept for compatibility with Internet Explorer 4.0 clients. New applications should use the PfxExportCertStoreEx function that provides enhanced private key security.</mitigation>
	</api>
	<api name="EngMapFontFile" deprecated="1">
		<dll>win32k.sys</dll>
		<os>Windows 2000</os>
		<mitigation>The EngMapFontFile function is obsolete. Use EngMapFontFileFD instead.</mitigation>
	</api>
	<api name="EngSetPointerTag" deprecated="1">
		<dll>win32k.sys</dll>
		<os>Windows 2000</os>
		<mitigation>The EngSetPointerTag function is obsolete for Windows 2000 and later operating system versions. This function is still supported, but always returns FALSE.</mitigation>
	</api>
	<api name="EngSetPrinterData" deprecated="1">
		<dll>win32k.sys</dll>
		<os>Windows 2000</os>
		<mitigation>The EngSetPrinterData function is obsolete in Windows 2000 and later.</mitigation>
	</api>
	<api name="EngUnmapFontFile" deprecated="1">
		<dll>win32k.sys</dll>
		<os>Windows 2000</os>
		<mitigation>The EngUnmapFontFile function is obsolete. Use EngUnmapFontFileFD instead.</mitigation>
	</api>
	<api name="WDEnable" deprecated="1">
		<dll>mpclient.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>WDEnable is no longer available for use as of Windows 10, version 1607. Beginning in Windows 10, version 1607 and Windows Server 2016, the WDEnable function always returns E_NOTIMPL.</mitigation>
	</api>
	<api name="CloseMetaFile" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is CloseEnhMetaFile.</mitigation>
	</api>
	<api name="CopyMetaFileW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is CopyEnhMetaFile.</mitigation>
	</api>
	<api name="CopyMetaFileA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is CopyEnhMetaFile.</mitigation>
	</api>
	<api name="CreateDIBPatternBrush" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the CreateDIBPatternBrushPt function.</mitigation>
	</api>
	<api name="CreateDiscardableBitmap" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the CreateCompatibleBitmap function.</mitigation>
	</api>
	<api name="CreateMetaFileW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is CreateEnhMetaFile.</mitigation>
	</api>
	<api name="CreateMetaFileA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is CreateEnhMetaFile.</mitigation>
	</api>
	<api name="CreateScalableFontResourceW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The CreateScalableFontResource function is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CreateScalableFontResourceA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The CreateScalableFontResource function is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="DeleteMetaFile" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is DeleteEnhMetaFile.</mitigation>
	</api>
	<api name="EnumFontFamiliesW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the EnumFontFamiliesEx function.</mitigation>
	</api>
	<api name="EnumFontFamiliesA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the EnumFontFamiliesEx function.</mitigation>
	</api>
	<api name="EnumFontsW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the EnumFontFamiliesEx function.</mitigation>
	</api>
	<api name="EnumFontsA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the EnumFontFamiliesEx function.</mitigation>
	</api>
	<api name="EnumMetaFile" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is EnumEnhMetaFile.</mitigation>
	</api>
	<api name="GetBitmapBits" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-draw-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-draw-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-draw-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-draw-l1-1-3.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the GetDIBits function.</mitigation>
	</api>
	<api name="GetCharacterPlacementW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Although this function was once adequate for working with character strings, a need to work with an increasing number of languages and scripts has rendered it obsolete. It has been superseded by the functionality of the Uniscribe module. For more information, see Uniscribe (https://learn.microsoft.com/en-us/windows/win32/intl/uniscribe).</mitigation>
	</api>
	<api name="GetCharacterPlacementA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Although this function was once adequate for working with character strings, a need to work with an increasing number of languages and scripts has rendered it obsolete. It has been superseded by the functionality of the Uniscribe module. For more information, see Uniscribe (https://learn.microsoft.com/en-us/windows/win32/intl/uniscribe).</mitigation>
	</api>
	<api name="GetCharWidthW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetCharWidth32 function, which provides more accurate results.</mitigation>
	</api>
	<api name="GetCharWidthA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetCharWidth32 function, which provides more accurate results.</mitigation>
	</api>
	<api name="GetDeviceGammaRamp" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>We strongly recommend that you do not use this API. Use of this API is subject to major limitations. See SetDeviceGammaRamp for more information.</mitigation>
	</api>
	<api name="GetMetaFileW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<mitigation>GetMetaFile is no longer available for use as of Windows 2000. Instead, use GetEnhMetaFile.</mitigation>
	</api>
	<api name="GetMetaFileA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<mitigation>GetMetaFile is no longer available for use as of Windows 2000. Instead, use GetEnhMetaFile.</mitigation>
	</api>
	<api name="GetMetaFileBitsEx" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is GetEnhMetaFileBits.</mitigation>
	</api>
	<api name="GetTextExtentPointW" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetTextExtentPoint32 function, which provides more accurate results.</mitigation>
	</api>
	<api name="GetTextExtentPointA" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetTextExtentPoint32 function, which provides more accurate results.</mitigation>
	</api>
	<api name="PlayMetaFile" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is PlayEnhMetaFile.</mitigation>
	</api>
	<api name="PlayMetaFileRecord" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is PlayEnhMetaFileRecord.</mitigation>
	</api>
	<api name="SetBitmapBits" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the SetDIBits function.</mitigation>
	</api>
	<api name="SetDeviceGammaRamp" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-wcs-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>We strongly recommend that you don not use this API. Use of this API is subject to major limitations: (a) SetDeviceGammaRamp implements heuristics to check whether a provided ramp will result in an unreadable screen. If a ramp violates those heuristics, then the function fails silently (that is, it returns TRUE, but it does not set your ramp). For that reason, you can not expect to use this function to set just any arbitrary gamma ramp. In particular, the heuristics prevent ramps that would result in nearly all pixels approaching a single value (such as fullscreen black/white) as this may prevent a user from recovering the screen. (b) Because of the function's global nature, any other application on the system could, at any time, overwrite any ramp that you have set. In some cases the operating system itself may reserve the use of this function, causing any existing ramp to be overwritten. The gamma ramp is also reset on most display events (connecting/disconnecting a monitor, resolution changes, etc.). So you can not be certain that any ramp you set is in effect. (b) This API has undefined behavior in HDR modes. (d) This API has undefined interaction with both built-in and third-party color calibration solutions. For color calibration, we recommend that you create an International Color Consortium (ICC) profile, and let the OS apply the profile. For advanced original equipment manufacturer (OEM) scenarios, there is a device driver model that you can use to customize color calibration more directly. See the Windows Color System (https://learn.microsoft.com/en-us/windows/win32/wcs/windows-color-system) for information on managing color profiles. For blue light filtering, Windows now provides built-in support called Night Light. We recommend directing users to this feature. For color adaptation (for example, adjusting color calibration based on ambient light sensors), Windows now provides built-in support, which we recommend for use by OEMs. For custom filter effects, there are a variety of built-in accessibility color filters to help with a range of cases.</mitigation>
	</api>
	<api name="SetMetaFileBitsEx" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-0.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-metafile-l1-1-2.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with Windows-format metafiles. Enhanced-format metafiles provide superior functionality and are recommended for new applications. The corresponding function for an enhanced-format metafile is SetEnhMetaFileBits.</mitigation>
	</api>
	<api name="SetTextCharacterExtra" deprecated="1">
		<dll>gdi32.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-1.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-2.dll</dll>
		<dll>ext-ms-win-gdi-font-l1-1-3.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The recommended approach is that instead of calling this function and then TextOut, applications should call ExtTextOut and use its lpDx parameter to supply widths.</mitigation>
	</api>
	<api name="InternetCheckConnectionW" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>InternetCheckConnection is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use NetworkInformation.GetInternetConnectionProfile or the NLM Interfaces.</mitigation>
	</api>
	<api name="InternetCheckConnectionA" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>InternetCheckConnection is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use NetworkInformation.GetInternetConnectionProfile or the NLM Interfaces.</mitigation>
	</api>
	<api name="InternetInitializeAutoProxyDll" deprecated="1">
		<dll>jsproxy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated. For autoproxy support, use HTTP Services (WinHTTP) version 5.1 instead. For more information, see WinHTTP AutoProxy Support (https://learn.microsoft.com/en-us/windows/win32/winhttp/winhttp-autoproxy-support).</mitigation>
	</api>
	<api name="InternetSetDialStateW" deprecated="1">
		<dll>wininet.dll</dll>
		<mitigation>This function is obsolete. Do not use.</mitigation>
	</api>
	<api name="InternetSetDialStateA" deprecated="1">
		<dll>wininet.dll</dll>
		<mitigation>This function is obsolete. Do not use.</mitigation>
	</api>
	<api name="InternetSetOptionExW" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use this function at this time.</mitigation>
	</api>
	<api name="InternetSetOptionExA" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use this function at this time.</mitigation>
	</api>
	<api name="CreateUrlCacheContainerA" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="CreateUrlCacheContainerW" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="DeleteUrlCacheContainerA" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="DeleteUrlCacheContainerW" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="FreeUrlCacheSpaceA" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="FreeUrlCacheSpaceW" deprecated="1">
		<dll>wininet.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This API is deprecated. Please use the Extensible Storage Engine (https://learn.microsoft.com/en-us/windows/win32/extensible-storage-engine/extensible-storage-engine) instead.</mitigation>
	</api>
	<api name="ldap_bindW" dangerous="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Unless a TLS (SSL) encrypted session is established, do not use this function. This function sends the name and password in plaintext. An unauthorized user, monitoring network traffic, could read the password. For more information about how to establish an encrypted session, see Initializing a Session (https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/initializing-a-session).</mitigation>
	</api>
	<api name="ldap_bindA" dangerous="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Unless a TLS (SSL) encrypted session is established, do not use this function. This function sends the name and password in plaintext. An unauthorized user, monitoring network traffic, could read the password. For more information about how to establish an encrypted session, see Initializing a Session (https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/initializing-a-session).</mitigation>
	</api>
	<api name="ldap_encode_sort_controlW" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. Instead, use ldapcreatesortcontrol.</mitigation>
	</api>
	<api name="ldap_encode_sort_controlA" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. Instead, use ldapcreatesortcontrol.</mitigation>
	</api>
	<api name="ldap_free_controlsW" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Obsolete. Use the ldap_controls_free function.</mitigation>
	</api>
	<api name="ldap_free_controlsA" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Obsolete. Use the ldap_controls_free function.</mitigation>
	</api>
	<api name="ldap_modrdnW" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete and is provided for backward compatibility with earlier versions of LDAP. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdnA" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete and is provided for backward compatibility with earlier versions of LDAP. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdn2W" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdn2A" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdn2_sW" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdn2_sA" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts functions.</mitigation>
	</api>
	<api name="ldap_modrdn_sW" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete and is provided for backward compatibility with earlier versions of LDAP. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts function.</mitigation>
	</api>
	<api name="ldap_modrdn_sA" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete and is provided for backward compatibility with earlier versions of LDAP. For LDAP 3 or later, use the ldaprenameext or ldaprenameexts function.</mitigation>
	</api>
	<api name="ldap_perror" deprecated="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is not supported.</mitigation>
	</api>
	<api name="ldap_simple_bindW" dangerous="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Unless a TLS (SSL) encrypted session is established, do not use this function. This function sends the name and password in plaintext. An unauthorized user, monitoring network traffic, could read the password. For more information about how to establish an encrypted session, see Initializing a Session (https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/initializing-a-session).</mitigation>
	</api>
	<api name="ldap_simple_bindA" dangerous="1">
		<dll>wldap32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Unless a TLS (SSL) encrypted session is established, do not use this function. This function sends the name and password in plaintext. An unauthorized user, monitoring network traffic, could read the password. For more information about how to establish an encrypted session, see Initializing a Session (https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ldap/initializing-a-session).</mitigation>
	</api>
	<api name="WNetAddConnectionW" deprecated="1">
		<dll>mpr.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Other Windows-based applications should call the WNetAddConnection2 or the WNetAddConnection3 function.</mitigation>
	</api>
	<api name="WNetAddConnectionA" deprecated="1">
		<dll>mpr.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Other Windows-based applications should call the WNetAddConnection2 or the WNetAddConnection3 function.</mitigation>
	</api>
	<api name="WNetCancelConnectionW" deprecated="1">
		<dll>mpr.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The WNetCancelConnection function is provided for compatibility with 16-bit versions of Windows. Other Windows-based applications should call the WNetCancelConnection2 function.</mitigation>
	</api>
	<api name="WNetCancelConnectionA" deprecated="1">
		<dll>mpr.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The WNetCancelConnection function is provided for compatibility with 16-bit versions of Windows. Other Windows-based applications should call the WNetCancelConnection2 function.</mitigation>
	</api>
	<api name="EnumSystemGeoID" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>EnumSystemGeoID is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use EnumSystemGeoNames.</mitigation>
	</api>
	<api name="EnumSystemLocalesW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the EnumSystemLocalesEx function to EnumSystemLocales because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use EnumSystemLocalesEx.</mitigation>
	</api>
	<api name="EnumSystemLocalesA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the EnumSystemLocalesEx function to EnumSystemLocales because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that will be run only on Windows Vista and later should use EnumSystemLocalesEx.</mitigation>
	</api>
	<api name="EnumTimeFormatsW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the EnumTimeFormatsEx function to EnumTimeFormats because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use EnumTimeFormatsEx.</mitigation>
	</api>
	<api name="EnumTimeFormatsA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the EnumTimeFormatsEx function to EnumTimeFormats because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use EnumTimeFormatsEx.</mitigation>
	</api>
	<api name="FindNLSString" deprecated="1" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Because strings with very different binary representations can compare as identical, this function can raise certain security concerns. For more information, see the discussion of comparison functions in Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features). For interoperability reasons, the application should prefer the FindNLSStringEx function because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Although FindNLSString supports custom locales, most applications should use FindNLSStringEx for this type of support.</mitigation>
	</api>
	<api name="FindNLSStringEx" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Because strings with very different binary representations can compare as identical, this function can raise certain security concerns. For more information, see the discussion of comparison functions in Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="GetCalendarInfoW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetCalendarInfoEx function to GetCalendarInfo because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetCalendarInfoEx.</mitigation>
	</api>
	<api name="GetCalendarInfoA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetCalendarInfoEx function to GetCalendarInfo because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetCalendarInfoEx.</mitigation>
	</api>
	<api name="GetCurrencyFormatW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetCurrencyFormatEx function to GetCurrencyFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetCurrencyFormatEx.</mitigation>
	</api>
	<api name="GetCurrencyFormatA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetCurrencyFormatEx function to GetCurrencyFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetCurrencyFormatEx.</mitigation>
	</api>
	<api name="GetDurationFormat" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>For interoperability reasons, the application should prefer the GetDurationFormatEx function to GetDurationFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetDurationFormatEx.</mitigation>
	</api>
	<api name="GetGeoInfoW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetGeoInfo is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetGeoInfoEx.</mitigation>
	</api>
	<api name="GetGeoInfoA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetGeoInfo is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetGeoInfoEx.</mitigation>
	</api>
	<api name="GetLocaleInfoW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetLocaleInfoEx function to GetLocaleInfo because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetLocaleInfoEx.</mitigation>
	</api>
	<api name="GetLocaleInfoA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetLocaleInfoEx function to GetLocaleInfo because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetLocaleInfoEx.</mitigation>
	</api>
	<api name="GetNLSVersion" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>For interoperability reasons, the application should prefer the GetNLSVersionEx function to GetNLSVersion because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. This recommendation applies especially to custom locales, for which GetNLSVersionEx retrieves enough information to determine if sort behavior has changed. Any application that runs only on Windows Vista and later should use GetNLSVersionEx or at least pass the NLSVERSIONINFOEX structure when calling GetNLSVersion to obtain additional sorting versioning data.</mitigation>
	</api>
	<api name="GetNumberFormatW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetNumberFormatEx function to GetNumberFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetNumberFormatEx.</mitigation>
	</api>
	<api name="GetNumberFormatA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<dll>api-ms-win-core-localization-ansi-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the GetNumberFormatEx function to GetNumberFormat because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. Any application that runs only on Windows Vista and later should use GetNumberFormatEx.</mitigation>
	</api>
	<api name="GetStringTypeA" dangerous="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using the GetStringTypeA function incorrectly can compromise the security of your application. To avoid a buffer overflow, the application must set the output buffer size correctly. For more security information, see Security Considerations: Windows User Interface.</mitigation>
	</api>
	<api name="GetSystemDefaultUILanguage" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-2-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-obsolete-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Use of this function is not recommended. Instead, we recommend using the User language settings (https://learn.microsoft.com/en-us/windows/win32/intl/setting-application-language-preferences) for the following reasons: (a) "Install language" is only set during the Out of Box Experience (OOBE) and then never changes. If the system language is changed, this function returns an incorrect value. (b) WCOS SKUs always return an incorrect value. (c) This function uses deprecated LANGIDs.</mitigation>
	</api>
	<api name="GetUserGeoID" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetUserGeoID is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetUserDefaultGeoName.</mitigation>
	</api>
	<api name="IdnToAscii" deprecated="1" dangerous="1">
		<dll>normaliz.dll</dll>
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-normaliz-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Windows XP, Windows Server 2003: No longer supported. This function implements the RFC 3490: Internationalizing Domain Names in Applications (IDNA) standard algorithms for the Punycode encoding of Unicode. The standard introduces some security issues. One issue is that glyphs representing certain characters from different scripts might appear similar or even identical. For example, in many fonts, Cyrillic lowercase A ("а") is indistinguishable from Latin lowercase A ("a"). There is no way to tell visually that "example.com" and "exаmple.com" are two different domain names, one with a Latin lowercase A in the name, the other with a Cyrillic lowercase A. For more information about IDN-related security concerns, see Handling Internationalized Domain Names (IDNs) (https://learn.microsoft.com/en-us/windows/win32/intl/handling-internationalized-domain-names--idns).</mitigation>
	</api>
	<api name="IdnToUnicode" deprecated="1" dangerous="1">
		<dll>normaliz.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-normaliz-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function implements the RFC 3490: Internationalizing Domain Names in Applications (IDNA) standard algorithms for the Punycode encoding of Unicode. The standard introduces some security issues. One issue is that glyphs representing certain characters from different scripts might appear similar or even identical. For example, in many fonts, Cyrillic lowercase A ("а") is indistinguishable from Latin lowercase A ("a"). There is no way to tell visually that "example.com" and "exаmple.com" are two different domain names, one with a Latin lowercase A in the name, the other with a Cyrillic lowercase A. For more information about IDN-related security concerns, see Handling Internationalized Domain Names (IDNs) (https://learn.microsoft.com/en-us/windows/win32/intl/handling-internationalized-domain-names--idns).</mitigation>
	</api>
	<api name="IsNormalizedString" deprecated="1">
		<dll>normaliz.dll</dll>
		<dll>api-ms-win-core-normalization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Windows XP, Windows Server 2003: No longer supported.</mitigation>
	</api>
	<api name="IsValidLocale" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>IsValidLocale is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use IsValidLocaleName to determine the validity of a supplemental locale.</mitigation>
	</api>
	<api name="LCMapStringW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the LCMapStringEx function to LCMapString because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. This recommendation applies especially to custom locales, including those created by Microsoft. Any application that will be run only on Windows Vista and later should use LCMapStringEx.</mitigation>
	</api>
	<api name="LCMapStringA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-core-misc-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>For interoperability reasons, the application should prefer the LCMapStringEx function to LCMapString because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales. This recommendation applies especially to custom locales, including those created by Microsoft. Any application that will be run only on Windows Vista and later should use LCMapStringEx.</mitigation>
	</api>
	<api name="LoadStringByReference" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-private-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>minkernelbase.dll</dll>
		<os>Windows 7</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>Unsupported. LoadStringByReference may be altered or unavailable. Instead, use SHLoadIndirectString.</mitigation>
	</api>
	<api name="NormalizeString" deprecated="1">
		<dll>normaliz.dll</dll>
		<dll>api-ms-win-core-normalization-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Windows XP, Windows Server 2003: No longer supported.</mitigation>
	</api>
	<api name="NotifyUILanguageChange" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>ext-ms-win-kernel32-localization-l1-1-0.dll</dll>
		<os>Windows 7</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>Unsupported. NotifyUILanguageChange may be altered or unavailable.</mitigation>
	</api>
	<api name="SetUserGeoID" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-1.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-localization-l1-2-2.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SetUserGeoID is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use SetUserGeoName.</mitigation>
	</api>
	<api name="WINNLSEnableIME" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is obsolete and should not be used.</mitigation>
	</api>
	<api name="RtlInitializeSListHead" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Calls to the InitializeSListHead function are forwarded to the RtlInitializeSListHead function. Applications should call InitializeSListHead instead of calling this function directly.</mitigation>
	</api>
	<api name="RtlInterlockedFlushSList" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Calls to the InterlockedFlushSList function are forwarded to the RtlInterlockedFlushSList function. Applications should call InterlockedFlushSList instead of calling this function directly.</mitigation>
	</api>
	<api name="RtlInterlockedPopEntrySList" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Calls to the InterlockedPopEntrySList function are forwarded to the RtlInterlockedPopEntrySList function. Applications should call InterlockedPopEntrySList instead of calling this function directly.</mitigation>
	</api>
	<api name="RtlInterlockedPushEntrySList" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Calls to the InterlockedPushEntrySList function are forwarded to the RtlInterlockedPushEntrySList function. Applications should call InterlockedPushEntrySList instead of calling this function directly.</mitigation>
	</api>
	<api name="RtlQueryDepthSList" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>Calls to the QueryDepthSList function are forwarded to the RtlQueryDepthSList function. Applications should call QueryDepthSList instead of calling this function directly.</mitigation>
	</api>
	<api name="RegCreateKeyW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegCreateKeyEx function. However, applications that back up or restore system state including system files and registry hives should use the Volume Shadow Copy Service (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview) instead of the registry functions.</mitigation>
	</api>
	<api name="RegCreateKeyA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegCreateKeyEx function. However, applications that back up or restore system state including system files and registry hives should use the Volume Shadow Copy Service (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview) instead of the registry functions.</mitigation>
	</api>
	<api name="RegEnumKeyW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegEnumKeyEx function.</mitigation>
	</api>
	<api name="RegEnumKeyA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegEnumKeyEx function.</mitigation>
	</api>
	<api name="RegOpenKeyW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegOpenKeyEx function.</mitigation>
	</api>
	<api name="RegOpenKeyA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegOpenKeyEx function.</mitigation>
	</api>
	<api name="RegQueryValueW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegQueryValueEx function.</mitigation>
	</api>
	<api name="RegQueryValueA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegQueryValueEx function.</mitigation>
	</api>
	<api name="RegSetValueW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegSetValueEx function.</mitigation>
	</api>
	<api name="RegSetValueA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-registry-l2-1-0.dll</dll>
		<dll>advapi32legacy.dll</dll>
		<dll>api-ms-win-core-registry-l2-2-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegSetValueEx function.</mitigation>
	</api>
	<api name="RegSetValueExW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-localregistry-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-registry-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-registry-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Consider using the RegSetKeyValue function, which provides a more convenient way to set the value of a registry key.</mitigation>
	</api>
	<api name="RegSetValueExA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-core-localregistry-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-registry-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-0.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l1-1-1.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>api-ms-win-core-registry-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Consider using the RegSetKeyValue function, which provides a more convenient way to set the value of a registry key.</mitigation>
	</api>
	<api name="SnmpCancelMsg" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCleanup" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCleanupEx" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpClose" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpContextToStr" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCountVbl" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCreatePdu" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCreateSession" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpCreateVbl" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpDecodeMsg" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpDeleteVb" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpDuplicatePdu" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpDuplicateVbl" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpEncodeMsg" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpEntityToStr" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpFreeContext" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpFreeDescriptor" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpFreeEntity" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpFreePdu" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpFreeVbl" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetLastError" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetPduData" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetRetransmitMode" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetRetry" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetTimeout" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetTranslateMode" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetVb" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpGetVendorInfo" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpListen" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpOidCompare" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpOidCopy" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpOidToStr" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpOpen" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpRecvMsg" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpRegister" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSendMsg" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetPduData" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetPort" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetRetransmitMode" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetRetry" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetTimeout" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetTranslateMode" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpSetVb" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpStartup" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpStartupEx" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpStrToContext" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpStrToEntity" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="SnmpStrToOid" deprecated="1">
		<dll>wsnmp32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>SNMP is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use Windows Remote Management (https://learn.microsoft.com/en-us/windows/win32/winrm/portal), which is the Microsoft implementation of WS-Man.</mitigation>
	</api>
	<api name="gethostbyname" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 8.1</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The gethostbyname function has been deprecated by the introduction of the getaddrinfo function. Developers creating Windows Sockets 2 applications are urged to use the getaddrinfo function instead of gethostbyname.</mitigation>
	</api>
	<api name="WSAAsyncSelect" deprecated="1">
		<dll>ws2_32.dll</dll>
		<dll>wsock32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The WSAAsyncSelect function is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Rather than use Select-style I/O, use Overlapped I/O and Event Objects with WinSock2.</mitigation>
	</api>
	<api name="WSAConnect" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 8.1</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>For applications targeted to Windows Vista and later, consider using the WSAConnectByList or WSAConnectByName function which greatly simplify client application design.</mitigation>
	</api>
	<api name="WSAEnumProtocolsW" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 8.1</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSAEnumProtocolsA" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 8.1</os>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="EnumServicesStatusW" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the EnumServicesStatusEx function. It returns the same information EnumServicesStatus returns, plus the process identifier and additional information for the service. In addition, EnumServicesStatusEx enables you to enumerate services that belong to a specified group.</mitigation>
	</api>
	<api name="EnumServicesStatusA" deprecated="1">
		<dll>advapi32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the EnumServicesStatusEx function. It returns the same information EnumServicesStatus returns, plus the process identifier and additional information for the service. In addition, EnumServicesStatusEx enables you to enumerate services that belong to a specified group.</mitigation>
	</api>
	<api name="QueryServiceStatus" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-1-0.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-2-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the QueryServiceStatusEx function. QueryServiceStatusEx returns the same information QueryServiceStatus returns, with the addition of the process identifier and additional information for the service.</mitigation>
	</api>
	<api name="RegisterServiceCtrlHandlerW" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-1-0.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-2-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the RegisterServiceCtrlHandlerEx function. A service can use either function, but the new function supports user-defined context data, and the new handler function supports additional extended control codes.</mitigation>
	</api>
	<api name="RegisterServiceCtrlHandlerA" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-1-0.dll</dll>
		<dll>api-ms-win-service-winsvc-l1-2-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function has been superseded by the RegisterServiceCtrlHandlerEx function. A service can use either function, but the new function supports user-defined context data, and the new handler function supports additional extended control codes.</mitigation>
	</api>
	<api name="SetServiceObjectSecurity" deprecated="1">
		<dll>advapi32.dll</dll>
		<dll>api-ms-win-downlevel-advapi32-l2-1-1.dll</dll>
		<dll>sechost.dll</dll>
		<dll>api-ms-win-service-management-l2-1-0.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SetServiceObjectSecurity is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the SetNamedSecurityInfo function.</mitigation>
	</api>
	<api name="NtClose" deprecated="1">
		<dll>ntdll.dll</dll>
		<dll>ntoskrnl.exe</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Closes the specified handle. NtClose is superseded by CloseHandle.</mitigation>
	</api>
	<api name="NtDeviceIoControlFile" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Builds descriptors for the supplied buffer(s) and passes the untyped data to the device driver associated with the file handle. NtDeviceIoControlFile is superseded by DeviceIoControl.</mitigation>
	</api>
	<api name="NtQueryInformationProcess" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>NtQueryInformationProcess may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="NtQueryInformationThread" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>NtQueryInformationThread may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="NtQuerySystemInformation" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>NtQuerySystemInformation may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="NtQuerySystemTime" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>NtQuerySystemTime may be altered or unavailable in future versions of Windows. Applications should use the GetSystemTimeAsFileTime function.</mitigation>
	</api>
	<api name="NtWaitForSingleObject" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Deprecated. Waits until the specified object attains a state of signaled. NtWaitForSingleObject is superseded by WaitForSingleObject.</mitigation>
	</api>
	<api name="RtlConvertSidToUnicodeString" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The RtlConvertSidToUnicodeString function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. Instead, use the ConvertSidToStringSid function.</mitigation>
	</api>
	<api name="RtlInitString" dangerous="1">
		<dll>ntdll.dll</dll>
		<mitigation>Do not allow the SourceString parameter size to exceed MAX_USHORT characters.</mitigation>
	</api>
	<api name="RtlIsNameLegalDOS8Dot3" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>RtlIsNameLegalDOS8Dot3 is available for use in Windows XP. It may be altered or unavailable in subsequent versions. Applications that target a minimum of Windows Server 2003 and Windows XP with Service Pack 1 (SP1) and later should use the CheckNameLegalDOS8Dot3 function.</mitigation>
	</api>
	<api name="RtlUnicodeToMultiByteSize" deprecated="1">
		<dll>ntdll.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>It is recommended that you use WideCharToMultiByte instead of RtlUnicodeToMultiByteSize. When its cbMultiByte parameter is set to zero, the WideCharToMultiByte function returns the number of bytes required for the buffer.</mitigation>
	</api>
	<api name="WintrustAddActionID" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WintrustAddActionID function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WintrustLoadFunctionPointers" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WintrustLoadFunctionPointers function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WintrustRemoveActionID" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WintrustRemoveActionID function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperCertCheckValidSignature" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperCertCheckValidSignature function is available for use in the Windows Vista and Windows XP with SP2 and Windows Server 2003 operating system. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperCertIsSelfSigned" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperCertIsSelfSigned function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperGetProvCertFromChain" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperGetProvCertFromChain function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperGetProvPrivateDataFromChain" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperGetProvPrivateDataFromChain function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperGetProvSignerFromChain" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperGetProvSignerFromChain function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="WTHelperProvDataFromStateData" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperProvDataFromStateData function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions. For certificate verification, use the CertGetCertificateChain and CertVerifyCertificateChainPolicy functions. For Microsoft Authenticode technology signature verification, use the .NET Framework.</mitigation>
	</api>
	<api name="AnyPopup" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. It is generally not useful.</mitigation>
	</api>
	<api name="CharToOemW" insecure="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-chartranslation-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use.</mitigation>
	</api>
	<api name="CharToOemA" insecure="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-chartranslation-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use.</mitigation>
	</api>
	<api name="CheckMenuItem" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>CheckMenuItem is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use SetMenuItemInfo.</mitigation>
	</api>
	<api name="DeregisterShellHookWindow" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-shell-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-iam-l1-1-0.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-iam-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="DlgDirListComboBoxW" dangerous="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes having lpPathSpec indicate a non-writable buffer, or a buffer without a null-termination. You should review the Security Considerations: Microsoft Windows Controls (https://learn.microsoft.com/en-us/windows/win32/controls/sec-comctls) before continuing.</mitigation>
	</api>
	<api name="DlgDirListComboBoxA" dangerous="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. Incorrect use of this function includes having lpPathSpec indicate a non-writable buffer, or a buffer without a null-termination. You should review the Security Considerations: Microsoft Windows Controls (https://learn.microsoft.com/en-us/windows/win32/controls/sec-comctls) before continuing.</mitigation>
	</api>
	<api name="DlgDirSelectComboBoxExW" dangerous="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Improper use of this function can cause problems for your application. For instance, the nCount parameter should be set properly for both ANSI and Unicode versions. Failure to do so could lead to a buffer overflow. You should review Security Considerations: Microsoft Windows Controls (https://learn.microsoft.com/en-us/windows/win32/controls/sec-comctls) before continuing.</mitigation>
	</api>
	<api name="DlgDirSelectComboBoxExA" dangerous="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>Improper use of this function can cause problems for your application. For instance, the nCount parameter should be set properly for both ANSI and Unicode versions. Failure to do so could lead to a buffer overflow. You should review Security Considerations: Microsoft Windows Controls (https://learn.microsoft.com/en-us/windows/win32/controls/sec-comctls) before continuing.</mitigation>
	</api>
	<api name="EndTask" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="GetCIMSSM" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>GetCIMSSM may be altered or unavailable in the future. Instead, use GetCurrentInputMessageSource.</mitigation>
	</api>
	<api name="GetClassInfoW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetClassInfo function has been superseded by the GetClassInfoEx function. You can still use GetClassInfo, however, if you do not need information about the class small icon.</mitigation>
	</api>
	<api name="GetClassInfoA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetClassInfo function has been superseded by the GetClassInfoEx function. You can still use GetClassInfo, however, if you do not need information about the class small icon.</mitigation>
	</api>
	<api name="GetClassLongW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>If you are retrieving a pointer or a handle, this function has been superseded by the GetClassLongPtr function. (Pointers and handles are 32 bits on 32-bit Windows and 64 bits on 64-bit Windows.).</mitigation>
	</api>
	<api name="GetClassLongA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>If you are retrieving a pointer or a handle, this function has been superseded by the GetClassLongPtr function. (Pointers and handles are 32 bits on 32-bit Windows and 64 bits on 64-bit Windows.).</mitigation>
	</api>
	<api name="GetClassWord" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated for any use other than nIndex set to GCW_ATOM. The function is provided only for compatibility with 16-bit versions of Windows. Applications should use the GetClassLongPtr or GetClassLongPtr function.</mitigation>
	</api>
	<api name="GetClipboardFormatNameW" dangerous="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-clipboard-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-clipboard-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-1.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-4-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. For example, miscalculating the proper size of the lpszFormatName buffer, especially when the application is used in both ANSI and Unicode versions, can cause a buffer overflow. Also, note that the string is truncated if it is longer than the cchMaxCount parameter, which can lead to loss of information.</mitigation>
	</api>
	<api name="GetClipboardFormatNameA" dangerous="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-clipboard-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-clipboard-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-1.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-4-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly might compromise the security of your program. For example, miscalculating the proper size of the lpszFormatName buffer, especially when the application is used in both ANSI and Unicode versions, can cause a buffer overflow. Also, note that the string is truncated if it is longer than the cchMaxCount parameter, which can lead to loss of information.</mitigation>
	</api>
	<api name="GetKBCodePage" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the GetOEMCP function to retrieve the OEM code-page identifier for the system.</mitigation>
	</api>
	<api name="GetMenuState" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetMenuState function has been superseded by the GetMenuItemInfo. You can still use GetMenuState, however, if you do not need any of the extended features of GetMenuItemInfo.</mitigation>
	</api>
	<api name="GetMenuStringW" deprecated="1" dangerous="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetMenuString function has been superseded. Use the GetMenuItemInfo function to retrieve the menu item text. The lpString parameter is a TCHAR buffer, and nMaxCount is the length of the menu string in characters. Sizing these parameters incorrectly can cause truncation of the string, leading to possible loss of data.</mitigation>
	</api>
	<api name="GetMenuStringA" deprecated="1" dangerous="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The GetMenuString function has been superseded. Use the GetMenuItemInfo function to retrieve the menu item text. The lpString parameter is a TCHAR buffer, and nMaxCount is the length of the menu string in characters. Sizing these parameters incorrectly can cause truncation of the string, leading to possible loss of data.</mitigation>
	</api>
	<api name="GetScrollPos" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-1.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-4-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The GetScrollPos function is provided for backward compatibility. New applications should use the GetScrollInfo function.</mitigation>
	</api>
	<api name="GetScrollRange" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The GetScrollRange function is provided for compatibility only. New applications should use the GetScrollInfo function.</mitigation>
	</api>
	<api name="GetWindowLongW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>If you are retrieving a pointer or a handle, this function has been superseded by the GetWindowLongPtr function. (Pointers and handles are 32 bits on 32-bit Windows and 64 bits on 64-bit Windows.) To write code that is compatible with both 32-bit and 64-bit versions of Windows, use GetWindowLongPtr.</mitigation>
	</api>
	<api name="GetWindowLongA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>If you are retrieving a pointer or a handle, this function has been superseded by the GetWindowLongPtr function. (Pointers and handles are 32 bits on 32-bit Windows and 64 bits on 64-bit Windows.) To write code that is compatible with both 32-bit and 64-bit versions of Windows, use GetWindowLongPtr.</mitigation>
	</api>
	<api name="InsertMenuW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The InsertMenu function has been superseded by the InsertMenuItem function. You can still use InsertMenu, however, if you do not need any of the extended features of InsertMenuItem.</mitigation>
	</api>
	<api name="InsertMenuA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-menu-l1-1-3.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The InsertMenu function has been superseded by the InsertMenuItem function. You can still use InsertMenu, however, if you do not need any of the extended features of InsertMenuItem.</mitigation>
	</api>
	<api name="InternalGetWindowText" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="IsHungAppWindow" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-window-l1-1-3.dll</dll>
		<dll>ext-ms-win-ntuser-window-l1-1-4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="IsProcessDPIAware" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-sysparams-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>IsProcessDPIAware is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Instead, use GetProcessDPIAwareness.</mitigation>
	</api>
	<api name="keybd_event" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded. Use SendInput instead.</mitigation>
	</api>
	<api name="LoadBitmapW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-draw-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-draw-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>LoadBitmap is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use LoadImage and DrawFrameControl.</mitigation>
	</api>
	<api name="LoadBitmapA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-draw-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-draw-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>LoadBitmap is available for use in the Windows 2000 Professional and Windows 2000 Server operating systems. It may be altered or unavailable in subsequent versions. Instead, use LoadImage and DrawFrameControl.</mitigation>
	</api>
	<api name="LoadCursorW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-gui-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-cursor-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the LoadImage function.</mitigation>
	</api>
	<api name="LoadCursorA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-gui-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-cursor-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the LoadImage function.</mitigation>
	</api>
	<api name="LoadIconW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-gui-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the LoadImage function.</mitigation>
	</api>
	<api name="LoadIconA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-0.dll</dll>
		<dll>api-ms-win-ntuser-ie-gui-l1-1-0.dll</dll>
		<dll>ie_stubs.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-2-1.dll</dll>
		<dll>ext-ms-win-ntuser-gui-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the LoadImage function.</mitigation>
	</api>
	<api name="LoadStringW" dangerous="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-0.dll</dll>
		<dll>api-ms-win-core-stringloader-l1-1-0.dll</dll>
		<dll>api-ms-win-core-stringloader-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-user32-l1-1-1.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. Incorrect use includes specifying the wrong size in the nBufferMax parameter. For example, if lpBuffer points to a buffer szBuffer which is declared as TCHAR szBuffer[100], then sizeof(szBuffer) gives the size of the buffer in bytes, which could lead to a buffer overflow for the Unicode version of the function. Buffer overflow situations are the cause of many security problems in applications. In this case, using sizeof(szBuffer)/sizeof(TCHAR) or sizeof(szBuffer)/sizeof(szBuffer[0]) would give the proper size of the buffer.</mitigation>
	</api>
	<api name="LoadStringA" dangerous="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-1-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-0.dll</dll>
		<dll>api-ms-win-core-stringloader-l1-1-0.dll</dll>
		<dll>api-ms-win-core-stringloader-l1-1-1.dll</dll>
		<dll>api-ms-win-downlevel-user32-l1-1-1.dll</dll>
		<dll>minkernelbase.dll</dll>
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-1.dll</dll>
		<dll>api-ms-win-core-libraryloader-l1-2-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Using this function incorrectly can compromise the security of your application. Incorrect use includes specifying the wrong size in the nBufferMax parameter. For example, if lpBuffer points to a buffer szBuffer which is declared as TCHAR szBuffer[100], then sizeof(szBuffer) gives the size of the buffer in bytes, which could lead to a buffer overflow for the Unicode version of the function. Buffer overflow situations are the cause of many security problems in applications. In this case, using sizeof(szBuffer)/sizeof(TCHAR) or sizeof(szBuffer)/sizeof(szBuffer[0]) would give the proper size of the buffer.</mitigation>
	</api>
	<api name="ModifyMenuW" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The ModifyMenu function has been superseded by the SetMenuItemInfo function. You can still use ModifyMenu, however, if you do not need any of the extended features of SetMenuItemInfo.</mitigation>
	</api>
	<api name="ModifyMenuA" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The ModifyMenu function has been superseded by the SetMenuItemInfo function. You can still use ModifyMenu, however, if you do not need any of the extended features of SetMenuItemInfo.</mitigation>
	</api>
	<api name="mouse_event" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded. Use SendInput instead.</mitigation>
	</api>
	<api name="OemToCharW" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use.</mitigation>
	</api>
	<api name="OemToCharA" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use.</mitigation>
	</api>
	<api name="PrivateExtractIconsW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="PrivateExtractIconsA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="RegisterClassW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The RegisterClass function has been superseded by the RegisterClassEx function. You can still use RegisterClass, however, if you do not need to set the class small icon.</mitigation>
	</api>
	<api name="RegisterClassA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The RegisterClass function has been superseded by the RegisterClassEx function. You can still use RegisterClass, however, if you do not need to set the class small icon.</mitigation>
	</api>
	<api name="RegisterPointerInputTargetEx" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-wmpointer-l1-1-2.dll</dll>
		<dll>minuser.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-wmpointer-l1-1-3.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>RegisterPointerInputTargetEx is not supported and may be altered or unavailable in the future. Instead, use RegisterPointerInputTarget.</mitigation>
	</api>
	<api name="RegisterShellHookWindow" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-shell-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-iam-l1-1-0.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-iam-l1-1-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="ScrollWindow" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The ScrollWindow function is provided for backward compatibility. New applications should use the ScrollWindowEx function.</mitigation>
	</api>
	<api name="SetClassLongW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the SetClassLongPtr function. To write code that is compatible with both 32-bit and 64-bit versions of Windows, use SetClassLongPtr.</mitigation>
	</api>
	<api name="SetClassLongA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the SetClassLongPtr function. To write code that is compatible with both 32-bit and 64-bit versions of Windows, use SetClassLongPtr.</mitigation>
	</api>
	<api name="SetClassWord" deprecated="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the SetClassLong function.</mitigation>
	</api>
	<api name="SetClipboardViewer" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is used for backward compatibility with earlier versions of Windows.</mitigation>
	</api>
	<api name="SetProcessDPIAware" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-sysparams-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>It is recommended that you set the process-default DPI awareness via application manifest, not an API call. See Setting the default DPI awareness (https://learn.microsoft.com/en-us/windows/win32/hidpi/setting-the-default-dpi-awareness-for-a-process) for a process for more information. Setting the process-default DPI awareness via API call can lead to unexpected application behavior.</mitigation>
	</api>
	<api name="SetScrollPos" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-1.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-4-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The SetScrollPos function is provided for backward compatibility. New applications should use the SetScrollInfo function.</mitigation>
	</api>
	<api name="SetScrollRange" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-3-1.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-4-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-0.dll</dll>
		<dll>ext-ms-win-ntuser-misc-l1-5-1.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>The SetScrollRange function is provided for backward compatibility. New applications should use the SetScrollInfo function.</mitigation>
	</api>
	<api name="SetWindowLongW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the SetWindowLongPtr function. To write code that is compatible with both 32-bit and 64-bit versions of Windows, use the SetWindowLongPtr function.</mitigation>
	</api>
	<api name="SetWindowLongA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-ntuser-ie-window-l1-1-0.dll</dll>
		<dll>ie_shims.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-window-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-1.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-window-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-windowclass-l1-1-2.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the SetWindowLongPtr function. To write code that is compatible with both 32-bit and 64-bit versions of Windows, use the SetWindowLongPtr function.</mitigation>
	</api>
	<api name="SwitchToThisWindow" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-window-l1-1-4.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not intended for general use. It may be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SystemParametersInfoW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-sysparams-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-sysparams-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>api-ms-win-ntuser-sysparams-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>You should not use this value. It might be altered or unavailable in subsequent versions of Windows. Instead, use the GetScaleFactorForDevice function or the DisplayProperties class to retrieve the preferred scaling factor. Desktop applications should use desktop logical DPI rather than scale factor. Desktop logical DPI can be retrieved through the GetDeviceCaps function.</mitigation>
	</api>
	<api name="SystemParametersInfoA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-sysparams-ext-l1-1-0.dll</dll>
		<dll>ext-ms-win-rtcore-ntuser-sysparams-l1-1-0.dll</dll>
		<dll>minuser.dll</dll>
		<dll>api-ms-win-ntuser-sysparams-l1-1-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>You should not use this value. It might be altered or unavailable in subsequent versions of Windows. Instead, use the GetScaleFactorForDevice function or the DisplayProperties class to retrieve the preferred scaling factor. Desktop applications should use desktop logical DPI rather than scale factor. Desktop logical DPI can be retrieved through the GetDeviceCaps function.</mitigation>
	</api>
	<api name="UnregisterPointerInputTargetEx" deprecated="1">
		<dll>user32.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-wmpointer-l1-1-2.dll</dll>
		<dll>minuser.dll</dll>
		<dll>api-ms-win-rtcore-ntuser-wmpointer-l1-1-3.dll</dll>
		<os>Windows 10</os>
		<os>Windows Server 2016</os>
		<mitigation>UnregisterPointerInputTargetEx is not supported and may be altered or unavailable in the future. Instead, use UnregisterPointerInputTarget.</mitigation>
	</api>
	<api name="VkKeyScanW" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-2-1.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the VkKeyScanEx function. You can still use VkKeyScan, however, if you do not need to specify a keyboard layout.</mitigation>
	</api>
	<api name="VkKeyScanA" deprecated="1">
		<dll>user32.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-0.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-1.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-1-2.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-2-0.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-2-1.dll</dll>
		<dll>ext-ms-win-ntuser-keyboard-l1-3-0.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function has been superseded by the VkKeyScanEx function. You can still use VkKeyScan, however, if you do not need to specify a keyboard layout.</mitigation>
	</api>
	<api name="wsprintfW" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using one of the following functions instead: StringCbPrintf, StringCbPrintfEx, StringCchPrintf, or StringCchPrintfEx.</mitigation>
	</api>
	<api name="wsprintfA" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using one of the following functions instead: StringCbPrintf, StringCbPrintfEx, StringCchPrintf, or StringCchPrintfEx.</mitigation>
	</api>
	<api name="wvsprintfW" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using one of the following functions instead: StringCbVPrintf, StringCbVPrintfEx, StringCchVPrintf, or StringCchVPrintfEx.</mitigation>
	</api>
	<api name="wvsprintfA" insecure="1">
		<dll>user32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Do not use. Consider using one of the following functions instead: StringCbVPrintf, StringCbVPrintfEx, StringCchVPrintf, or StringCchVPrintfEx.</mitigation>
	</api>
	<api name="WSCEnumProtocols" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCEnumProtocols32" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows XP Professional x64 Edition</os>
		<os>Windows Server 2008</os>
		<os>Windows Server 2003 x64 Edition</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCGetApplicationCategory" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCGetProviderInfo" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCGetProviderInfo32" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCInstallProvider" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCInstallProvider64_32" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows XP Professional x64 Edition</os>
		<os>Windows Server 2003 x64 Edition</os>
		<mitigation>WSCInstallProvider64_32 is no longer available for use as of Windows Vista. Instead, use WSCInstallProvider or WSCInstallProviderAndChains.</mitigation>
	</api>
	<api name="WSCInstallProviderAndChains" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCInstallQOSTemplate" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported in Windows Vista and subsequent versions of the operating system.</mitigation>
	</api>
	<api name="WSCRemoveQOSTemplate" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is not supported in Windows Vista and subsequent versions of the operating system.</mitigation>
	</api>
	<api name="WSCSetApplicationCategory" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCSetProviderInfo" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WSCSetProviderInfo32" deprecated="1">
		<dll>ws2_32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Layered Service Providers are deprecated. Starting with Windows 8 and Windows Server 2012, use Windows Filtering Platform (https://learn.microsoft.com/en-us/windows/win32/FWP/windows-filtering-platform-start-page).</mitigation>
	</api>
	<api name="WTSVirtualChannelOpen" deprecated="1">
		<dll>wtsapi32.dll</dll>
		<dll>ext-ms-win-session-wtsapi32-l1-1-0.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is obsolete. Instead, use the WTSVirtualChannelOpenEx function.</mitigation>
	</api>
	<api name="StartXpsPrintJob" deprecated="1">
		<dll>xpsprint.dll</dll>
		<os>Windows 7</os>
		<os>Windows Server 2008 R2</os>
		<mitigation>StartXpsPrintJob is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="StartXpsPrintJob1" deprecated="1">
		<dll>xpsprint.dll</dll>
		<os>Windows 7 with SP1</os>
		<os>Windows Vista and Platform Update Supplement for Windows Vista</os>
		<os>Windows Server 2008 R2 with SP1</os>
		<os>Windows Server 2008 and Platform Update Supplement for Windows Server 2008</os>
		<mitigation>StartXpsPrintJob1 is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="DsBackupClose" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupEnd" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupFree" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupGetBackupLogsW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupGetBackupLogsA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupGetDatabaseNamesW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupGetDatabaseNamesA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupOpenFileW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupOpenFileA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupPrepareW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupPrepareA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupRead" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsBackupTruncateLogs" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsIsNTDSOnlineW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsIsNTDSOnlineA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreEnd" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<mitigation>This function is available for use in the operating system. It may be altered or unavailable in subsequent versions. Use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreGetDatabaseLocationsW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreGetDatabaseLocationsA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestorePrepareW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestorePrepareA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreRegisterW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreRegisterA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsRestoreRegisterComplete" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<mitigation>This function is available for use in the operating system. It may be altered or unavailable in subsequent versions. Use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsSetAuthIdentityW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsSetAuthIdentityA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsSetCurrentBackupLogW" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DsSetCurrentBackupLogA" deprecated="1">
		<dll>ntdsbcli.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in the Windows Vista and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Beginning with Windows Vista, use Volume Shadow Copy Service (VSS) (https://learn.microsoft.com/en-us/windows/win32/vss/volume-shadow-copy-service-overview).</mitigation>
	</api>
	<api name="DrawTextExPrivWrap" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DrawTextExPrivWrap is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions. It is recommended to use DrawTextEx.</mitigation>
	</api>
	<api name="DrawTextWrap" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>DrawTextWrap is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions. It is recommended to use DrawText.</mitigation>
	</api>
	<api name="ExtTextOutWrap" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>ExtTextOutWrap is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions. It is recommended to use ExtTextOut.</mitigation>
	</api>
	<api name="GetTextExtentPoint32Wrap" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>GetTextExtentPoint32Wrap is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions. It is recommended to use GetTextExtentPoint.</mitigation>
	</api>
	<api name="MirrorIcon" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>MirrorIcon is available through Windows XP with Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="Str\_GetPtrW" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="Str\_GetPtrA" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="_CreateFile" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the CreateFile function. This function may be altered or unavailable in the future. Applications should call CreateFile directly.</mitigation>
	</api>
	<api name="_CreateFontIndirect" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the CreateFontIndirect function. This function may be altered or unavailable in the future. Applications should call CreateFontIndirect directly.</mitigation>
	</api>
	<api name="_DeleteFile" deprecated="1">
		<dll>msmdun80.dll</dll>
		<mitigation>This function is a wrapper over the DeleteFile function. This function may be altered or unavailable in the future. Applications should call DeleteFile directly.</mitigation>
	</api>
	<api name="NtGdiDdAddAttachedSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdAttachSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdBeginMoCompFrame" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdBlt" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCanCreateD3DBuffer" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCanCreateSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdColorControl" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateD3DBuffer" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateMoComp" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateSurfaceEx" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdCreateSurfaceObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdDeleteDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdDeleteSurfaceObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdDestroyD3DBuffer" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdDestroyMoComp" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdDestroySurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdEndMoCompFrame" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdFlip" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdFlipToGDISurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetAvailDriverMemory" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetBltStatus" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetDC" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetDriverInfo" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetDxHandle" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetFlipStatus" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetInternalMoCompInfo" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetMoCompBuffInfo" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetMoCompFormats" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetMoCompGuids" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdGetScanLine" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdLock" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdLockD3D" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdQueryDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdQueryMoCompStatus" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdReenableDirectDrawObject" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdReleaseDC" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdRenderMoComp" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdResetVisrgn" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdSetColorKey" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdSetExclusiveMode" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdSetGammaRamp" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdSetOverlayPosition" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdUnattachSurface" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdUnlock" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdUnlockD3D" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdUpdateOverlay" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="NtGdiDdWaitForVerticalBlank" deprecated="1">
		<dll>ext-ms-win-gdi-internal-desktop-l1-1-0.dll</dll>
		<dll>gdi32.dll</dll>
		<dll>gdi32full.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is subject to change with each operating system revision. Instead, use the Microsoft DirectDraw and Microsoft Direct3DAPIs; these APIs insulate applications from such operating system changes, and hide many other difficulties involved in interacting directly with display drivers.</mitigation>
	</api>
	<api name="_FindResource" deprecated="1">
		<dll>msmdun80.dll</dll>
		<mitigation>This function is a wrapper over the FindResource function. This function may be altered or unavailable in the future. Applications should call FindResource directly.</mitigation>
	</api>
	<api name="_FormatMessage" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the FormatMessage function. This function may be altered or unavailable in the future. Applications should call FormatMessage directly.</mitigation>
	</api>
	<api name="_GetComputerName" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetComputerName function. This function may be altered or unavailable in the future. Applications should call GetComputerName directly.</mitigation>
	</api>
	<api name="_GetDiskFreeSpaceEx" deprecated="1">
		<dll>msmdun80.dll</dll>
		<mitigation>This function is a wrapper over the GetDiskFreeSpaceEx function. This function may be altered or unavailable in the future. Applications should call GetDiskFreeSpaceEx directly.</mitigation>
	</api>
	<api name="_GetModuleFileName" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetModuleFileName function. This function may be altered or unavailable in the future. Applications should call GetModuleFileName directly.</mitigation>
	</api>
	<api name="_GetObject" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetObject function. This function may be altered or unavailable in the future. Applications should call GetObject directly.</mitigation>
	</api>
	<api name="_GetProcAddress_" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetProcAddress function. This function may be altered or unavailable in the future. Applications should call GetProcAddress directly.</mitigation>
	</api>
	<api name="_GetUserName" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetUserName function. This function may be altered or unavailable in the future. Applications should call GetUserName directly.</mitigation>
	</api>
	<api name="_GetVersionEx" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetVersionEx function. This function may be altered or unavailable in the future. Applications should call GetVersionEx directly.</mitigation>
	</api>
	<api name="_GetWindowText" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the GetWindowText function. This function may be altered or unavailable in the future. Applications should call GetWindowText directly.</mitigation>
	</api>
	<api name="_LoadCursor" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the LoadCursor function. This function may be altered or unavailable in the future. Applications should call LoadCursor directly.</mitigation>
	</api>
	<api name="_LoadLibrary" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the LoadLibrary function. This function may be altered or unavailable in the future. Applications should call LoadLibrary directly.</mitigation>
	</api>
	<api name="_LoadString" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the LoadString function. This function may be altered or unavailable in the future. Applications should call LoadString directly.</mitigation>
	</api>
	<api name="_MessageBox" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the MessageBox function. This function may be altered or unavailable in the future. Applications should call MessageBox directly.</mitigation>
	</api>
	<api name="_MoveFile" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the MoveFile function. This function may be altered or unavailable in the future. Applications should call MoveFile directly.</mitigation>
	</api>
	<api name="_PeekMessage" deprecated="1">
		<dll>msmdun80.dll</dll>
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the PeekMessage function. This function may be altered or unavailable in the future. Applications should call PeekMessage directly.</mitigation>
	</api>
	<api name="_SendDlgItemMessage" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the SendDlgItemMessage function. This function may be altered or unavailable in the future. Applications should call SendDlgItemMessage directly.</mitigation>
	</api>
	<api name="_SendMessage" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the SendMessage function. This function may be altered or unavailable in the future. Applications should call SendMessage directly.</mitigation>
	</api>
	<api name="_SetDlgItemText" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the SetDlgItemText function. This function may be altered or unavailable in the future. Applications should call SetDlgItemText directly.</mitigation>
	</api>
	<api name="_SetWindowText" deprecated="1">
		<dll>sqlunirl.dll</dll>
		<mitigation>This function is a wrapper over the SetWindowText function. This function may be altered or unavailable in the future. Applications should call SetWindowText directly.</mitigation>
	</api>
	<api name="BeginIdleDetection" deprecated="1">
		<dll>msidle.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future. Instead, use the GetLastInputInfo function.</mitigation>
	</api>
	<api name="CSCFindClose" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CSCFindFirstFileW" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CSCFindNextFileW" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CSCGetSpaceUsageW" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CSCIsCSCEnabled" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CSCQueryDatabaseStatus" deprecated="1">
		<dll>cscmig.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="CtxGetIniMapping" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is not supported and should not be used. It may change or disappear completely without advance notice. Instead, use VerifyVersionInfo.</mitigation>
	</api>
	<api name="DeleteExtractedFiles" deprecated="1">
		<dll>cabinet.dll</dll>
		<mitigation>This function is no longer supported, so its behavior cannot be guaranteed.</mitigation>
	</api>
	<api name="DllGetVersion" deprecated="1">
		<dll>cabinet.dll</dll>
		<mitigation>This function is no longer supported, so its behavior cannot be guaranteed.</mitigation>
	</api>
	<api name="EndIdleDetection" deprecated="1">
		<dll>msidle.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future. Instead, use the GetLastInputInfo function.</mitigation>
	</api>
	<api name="Extract" deprecated="1">
		<dll>cabinet.dll</dll>
		<mitigation>This function is no longer supported, so its behavior cannot be guaranteed.</mitigation>
	</api>
	<api name="GetDllVersion" deprecated="1">
		<dll>cabinet.dll</dll>
		<mitigation>This function is no longer supported, so its behavior cannot be guaranteed.</mitigation>
	</api>
	<api name="GetIdleMinutes" deprecated="1">
		<dll>msidle.dll</dll>
		<mitigation>This function is not supported and may be altered or unavailable in the future. Instead, use the GetLastInputInfo function.</mitigation>
	</api>
	<api name="InetGetAutodial" deprecated="1">
		<dll>inetcfg.dll</dll>
		<mitigation>This function is unsupported and may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="InstallCatalog" deprecated="1">
		<dll>setupapi.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="NtOpenDirectoryObject" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>This function may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NtOpenSymbolicLinkObject" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>This function may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NtQueryDirectoryObject" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>This function may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="NtQueryPerformanceCounter" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>This function is not supported and should not be used. Use the QueryPerformanceCounter and QueryPerformanceFrequency functions instead.</mitigation>
	</api>
	<api name="NtQuerySymbolicLinkObject" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>This function may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="pSetupInstallCatalog" deprecated="1">
		<dll>setupapi.dll</dll>
		<mitigation>This function is no longer supported by Microsoft. Developers should use CryptCATAdminAddCatalog.</mitigation>
	</api>
	<api name="pSetupVerifyCatalogFile" deprecated="1">
		<dll>setupapi.dll</dll>
		<mitigation>This function is no longer supported by Microsoft. For an INF file (device install), developers should use SetupVerifyInfFile. To validate a non-INF based catalog, use WinVerifyTrust.</mitigation>
	</api>
	<api name="PStoreCreateInstance" deprecated="1">
		<dll>pstorec.dll</dll>
		<mitigation>This function may be altered or unavailable in future versions of Windows. Use the CryptProtectData and CryptUnprotectData functions instead of this function.</mitigation>
	</api>
	<api name="RtlExtendedIntegerMultiply" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>The RtlExtendedIntegerMultiply function is exported to support existing driver binaries and is obsolete. For better performance, use the compiler support for 64-bit integer operations.</mitigation>
	</api>
	<api name="RtlExtendedLargeIntegerDivide" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>The RtlExtendedLargeIntegerDivide function is exported to support existing driver binaries and is obsolete. For better performance, use the compiler support for 64-bit integer operations.</mitigation>
	</api>
	<api name="TermsrvAppInstallMode" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is not supported and should not be used. It may change or disappear completely without advance notice.</mitigation>
	</api>
	<api name="VerifyCatalogFile" deprecated="1">
		<dll>setupapi.dll</dll>
		<mitigation>This function is not supported and should not be used.</mitigation>
	</api>
	<api name="DirectXFileCreate" deprecated="1">
		<dll>d3dxof.dll</dll>
		<mitigation>Creates an instance of a DirectXFile object. Deprecated.</mitigation>
	</api>
	<api name="AdjustCalendarDate" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Adjusts a date by a specified number of years, months, weeks, or days.</mitigation>
	</api>
	<api name="ConvertCalDateTimeToSystemTime" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Converts a specified CALDATETIME structure to a SYSTEMTIME structure.</mitigation>
	</api>
	<api name="ConvertSystemTimeToCalDateTime" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Converts a specified SYSTEMTIME structure to a CALDATETIME structure.</mitigation>
	</api>
	<api name="GetCalendarDateFormatEx" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Retrieves a properly formatted date string for the specified locale using the specified date and calendar. The user can specify the short date format, the long date format, the year month format, or a custom format pattern.</mitigation>
	</api>
	<api name="GetCalendarSupportedDateRange" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Gets the supported date range for a specified calendar.</mitigation>
	</api>
	<api name="IsCalendarLeapYear" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Identifies whether the specified year is a leap year within the given era for the specific calendar.</mitigation>
	</api>
	<api name="RtlIsValidLocaleName" deprecated="1">
		<dll>kernel32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is available for use in Windows Vista only. It might be altered or unavailable in subsequent versions. Applications should use IsValidLocaleName.</mitigation>
	</api>
	<api name="UpdateCalendarDayOfWeek" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-calendar-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>Deprecated. Gets the day of the week that corresponds to a specified day and populates the DayOfWeek member in the specified CALDATETIME structure with that value.</mitigation>
	</api>
	<api name="NDdeGetErrorStringW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeGetErrorStringA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeGetShareSecurityW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeGetShareSecurityA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeGetTrustedShareW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeGetTrustedShareA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeIsValidAppTopicListW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeIsValidAppTopicListA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeIsValidShareNameW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeIsValidShareNameA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeSetShareSecurityW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeSetShareSecurityA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeSetTrustedShareW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeSetTrustedShareA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareAddW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareAddA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareDelW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareDelA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareEnumW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareEnumA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareGetInfoW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareGetInfoA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareSetInfoW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeShareSetInfoA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeTrustedShareEnumW" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="NDdeTrustedShareEnumA" deprecated="1">
		<dll>nddeapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>Network DDE is no longer supported. Nddeapi.dll is present on Windows Vista, but all function calls return NDDENOTIMPLEMENTED.</mitigation>
	</api>
	<api name="MpManagerStatusQuery" deprecated="1">
		<dll>mpclient.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012</os>
		<mitigation>MpManagerStatusQuery is not supported and may be altered or unavailable in the future. Instead, use MpManagerStatusQueryEx.</mitigation>
	</api>
	<api name="ConfigureOPMProtectedOutput" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="CreateOPMProtectedOutputs" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetCertificate" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetCertificateSize" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetCOPPCompatibleOPMInformation" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetOPMInformation" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="MFCreateCaptureEngine" deprecated="1">
		<dll>mfcaptureengine.dll</dll>
		<os>Windows 8</os>
		<os>Windows Server 2012 R2</os>
		<mitigation>MFCreateCaptureEngine is not supported and may be altered or unavailable in the future.</mitigation>
	</api>
	<api name="MFCreatePathFromURL" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Instead, applications should call PathCreateFromUrl.</mitigation>
	</api>
	<api name="MFCreateURLFromPath" deprecated="1">
		<dll>mfplat.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This API is not supported and may be altered or unavailable in the future. Instead, Applications should call UrlCreateFromPath.</mitigation>
	</api>
	<api name="SetOPMSigningKeyAndSequenceNumbers" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by Output Protection Manager (OPM) to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCIGetCapabilitiesString" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCIGetCapabilitiesStringLength" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCIGetTimingReport" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCIGetVCPFeature" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCISaveCurrentSettings" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DDCCISetVCPFeature" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="DestroyPhysicalMonitorInternal" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetNumberOfPhysicalMonitors" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetPhysicalMonitorDescription" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="GetPhysicalMonitors" internal="1">
		<dll>gdi32.dll</dll>
		<os>Windows Vista</os>
		<os>Windows Server 2008</os>
		<mitigation>This function is used by the monitor configuration API to access functionality in the display driver. Applications should not call this function.</mitigation>
	</api>
	<api name="WZCEapolGetInterfaceParams" deprecated="1">
		<dll>wzcsapi.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>WZCEapolGetInterfaceParams is no longer supported as of Windows Vista and Windows Server 2008. Instead, use the Native Wifi API, which provides similar functionality. For more information, see About the Native Wifi API (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-native-wifi-api), About the Wi-Fi Direct (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-wi-fi-direct-api).</mitigation>
	</api>
	<api name="WZCEnumInterfaces" deprecated="1">
		<dll>wzcsapi.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>WZCEnumInterfaces is no longer supported as of Windows Vista and Windows Server 2008. Instead, use the WlanEnumInterfaces function. For more information, see About the Native Wifi API (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-native-wifi-api), About the Wi-Fi Direct (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-wi-fi-direct-api).</mitigation>
	</api>
	<api name="WZCQueryInterface" deprecated="1">
		<dll>wzcsapi.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>WZCQueryInterface is no longer supported as of Windows Vista and Windows Server 2008. Use the WlanQueryInterface function instead. For more information, see About the Native Wifi API (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-native-wifi-api), About the Wi-Fi Direct (https://learn.microsoft.com/en-us/windows/win32/nativewifi/about-the-wi-fi-direct-api).</mitigation>
	</api>
	<api name="gluBeginPolygon" deprecated="1">
		<dll>glu32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The gluBeginPolygon function is obsolete and is provided for backward compatibility only. The gluBeginPolygon function is mapped to gluTessBeginPolygon.</mitigation>
	</api>
	<api name="gluEndPolygon" deprecated="1">
		<dll>glu32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The gluEndPolygon function is obsolete and is provided for backward compatibility only. The gluEndPolygon function is mapped to gluTessEndPolygon followed by gluTessEndContour.</mitigation>
	</api>
	<api name="gluNextContour" deprecated="1">
		<dll>glu32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The gluNextContour function is obsolete and is provided for backward compatibility only. The gluNextContour function is mapped to gluTessEndContour.</mitigation>
	</api>
	<api name="PdhVbAddCounter" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbCreateCounterPathList" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbGetCounterPathElements" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbGetCounterPathFromList" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbGetDoubleCounterValue" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbGetLogFileSize" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbGetOneCounterPath" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbIsGoodStatus" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbOpenLog" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbOpenQuery" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="PdhVbUpdateLog" deprecated="1">
		<dll>pdh.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The function that this topic describes may be altered or unavailable in the future. Instead, Microsoft recommends that you use the functions described in Performance Counters Functions (https://learn.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-functions).</mitigation>
	</api>
	<api name="BindPTProviderThunk" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTOpenProviderEx provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="ConvertDevModeToPrintTicketThunk2" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTConvertDevModeToPrintTicket provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="ConvertPrintTicketToDevModeThunk2" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTConvertPrintTicketToDevMode provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="GetPrintCapabilitiesThunk2" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTGetPrintCapabilities provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="MergeAndValidatePrintTicketThunk2" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTMergeAndValidatePrintTicket provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="UnbindPTProviderThunk" deprecated="1">
		<dll>prntvpt.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is not supported and might be disabled or deleted in future versions of Windows. PTCloseProvider provides equivalent functionality and should be used instead.</mitigation>
	</api>
	<api name="NtGetCurrentProcessorNumber" deprecated="1">
		<dll>ntdll.dll</dll>
		<mitigation>NtGetCurrentProcessorNumber may be altered or unavailable in future versions of Windows. Applications should use the GetCurrentProcessorNumber.</mitigation>
	</api>
	<api name="ZwQueryInformationProcess" deprecated="1">
		<dll>ntdll.dll</dll>
		<dll>ntoskrnl.exe</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>ZwQueryInformationProcess may be altered or unavailable in future versions of Windows.</mitigation>
	</api>
	<api name="SystemPrng" deprecated="1">
		<dll>ksecdd.sys</dll>
		<dll>cng.sys</dll>
		<os>Windows Vista with SP1</os>
		<os>Windows Server 2008</os>
		<mitigation>SystemPrng is available for use in the Windows Vista with SP1 and Windows Server 2008 operating systems. It may be altered or unavailable in subsequent versions. Instead, use BCryptGenRandom.</mitigation>
	</api>
	<api name="CryptCATCDFEnumAttributesWithCDFTag" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCDFEnumAttributesWithCDFTag function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="CryptCATCDFEnumMembersByCDFTagEx" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The CryptCATCDFEnumMembersByCDFTagEx function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="FreeCryptProvFromCert" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="GetCryptProvFromCert" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="PvkFreeCryptProv" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="PvkGetCryptProv" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="PvkPrivateKeyAcquireContextFromMemory" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="PvkPrivateKeySave" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="SignError" deprecated="1">
		<dll>mssign32.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This API is deprecated. Microsoft may remove this API in future releases.</mitigation>
	</api>
	<api name="WTHelperCertFindIssuerCertificate" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperCertFindIssuerCertificate function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="WTHelperGetFileHash" deprecated="1">
		<dll>wintrust.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>The WTHelperGetFileHash function is available for use in the Windows XP and Windows Server 2003 operating systems. It may be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="AddMRUStringW" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="CanShareFolderW" deprecated="1">
		<dll>ntshrui.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="ShowShareFolderUI" deprecated="1">
		<dll>ntshrui.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="CompareStringWrapW" deprecated="1" dangerous="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>CompareStringWrapW is available for use in Windows XP. It will not be available in subsequent versions. You should use CompareStringW. Using this function incorrectly can compromise the security of your application. Strings that are not compared correctly can produce invalid input. Test strings to make sure they are valid before using them and provide error handlers. For more information, see Security Considerations: International Features (https://learn.microsoft.com/en-us/windows/win32/intl/security-considerations--international-features).</mitigation>
	</api>
	<api name="CreateHardwareEventMoniker" deprecated="1">
		<dll>shsvcs.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="EnumMRUListW" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="CreateMRUListW" deprecated="1">
		<dll>comctl32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="EstimateFileRiskLevel" deprecated="1">
		<dll>winshfhc.dll</dll>
		<os>Windows XP with SP2</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available on Windows XP with Service Pack 2 (SP2) through Windows Vista. It might be altered or unavailable in subsequent versions of Windows. Client applications instead should use IAttachmentExecute.</mitigation>
	</api>
	<api name="GetDateFormatWrapW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>GetDateFormatWrapW is available for use in Windows XP. It will not be available in subsequent versions. You should use GetDateFormatW.</mitigation>
	</api>
	<api name="GUIDFromStringW" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>GUIDFromString is available through Windows XP with Service Pack 2 (SP2) or Windows Vista. It might be altered or unavailable in subsequent versions. Applications should use CLSIDFromString.</mitigation>
	</api>
	<api name="GUIDFromStringA" deprecated="1">
		<dll>shell32.dll</dll>
		<dll>api-ms-win-shlwapi-ie-l1-1-0.dll</dll>
		<dll>shlwapi.dll</dll>
		<os>Windows XP</os>
		<os>Windows 2000 Server</os>
		<mitigation>GUIDFromString is available through Windows XP with Service Pack 2 (SP2) or Windows Vista. It might be altered or unavailable in subsequent versions. Applications should use CLSIDFromString.</mitigation>
	</api>
	<api name="IsCharAlphaNumericWrapW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>IsCharAlphaNumericWrapW is available for use in Windows XP. It will not be available in subsequent versions. You should use IsCharAlphaNumericW.</mitigation>
	</api>
	<api name="LinkWindow_RegisterClass" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows. Use InitCommonControlsEx.</mitigation>
	</api>
	<api name="LinkWindow_UnregisterClass" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="MLHtmlHelpW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="MLHtmlHelpA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="MLWinHelpW" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="MLWinHelpA" deprecated="1">
		<dll>shlwapi.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="ParseField" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>The ParseField function is currently expected to be available for use in the next version of the Microsoft Windows operating system. It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="PassportWizardRunDll" deprecated="1">
		<dll>netplwiz.dll</dll>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="SHExtractIconsW" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows XP</os>
		<os>Windows Server 2003</os>
		<mitigation>SHExtractIconsW is available through Windows XP Service Pack 2 (SP2). It might be altered or unavailable in subsequent versions.</mitigation>
	</api>
	<api name="WOWShellExecute" deprecated="1">
		<dll>shell32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is available through Windows XP with Service Pack 2 (SP2) and Windows Server 2003. It might be altered or unavailable in subsequent versions of Windows.</mitigation>
	</api>
	<api name="ZwQuerySystemInformation" deprecated="1">
		<dll>ntdll.dll</dll>
		<dll>ntoskrnl.exe</dll>
		<mitigation>ZwQuerySystemInformation is no longer available for use as of Windows 8. Instead, use the alternate functions listed in this topic.</mitigation>
	</api>
	<api name="InternetGetProxyInfo" deprecated="1">
		<dll>jsproxy.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>This function is deprecated on Windows 10, and it is unsupported as of Windows 11. For autoproxy support, use HTTP Services (WinHTTP) version 5.1 instead. For more information, see WinHTTP AutoProxy Support (https://learn.microsoft.com/en-us/windows/win32/winhttp/winhttp-autoproxy-support).</mitigation>
	</api>
	<api name="AddConsoleAliasW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="AddConsoleAliasA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="CreateConsoleScreenBuffer" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="FillConsoleOutputAttribute" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="FillConsoleOutputCharacterW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="FillConsoleOutputCharacterA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="FlushConsoleInputBuffer" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasesW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasesA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasesLengthW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasesLengthA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasExesW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasExesA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasExesLengthW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleAliasExesLengthA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleCursorInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleDisplayMode" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleFontSize" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleHistoryInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleOriginalTitleW" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleOriginalTitleA" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleSelectionInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleTitleW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>api-ms-win-core-console-ansi-l2-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleTitleA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>api-ms-win-core-console-ansi-l2-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetConsoleWindow" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetCurrentConsoleFont" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetCurrentConsoleFontEx" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetLargestConsoleWindowSize" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="GetNumberOfConsoleMouseButtons" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ReadConsoleOutputW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ReadConsoleOutputA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ReadConsoleOutputAttribute" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ReadConsoleOutputCharacterW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ReadConsoleOutputCharacterA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ScrollConsoleScreenBufferW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="ScrollConsoleScreenBufferA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleActiveScreenBuffer" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleCursorInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleCursorPosition" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleDisplayMode" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleHistoryInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleScreenBufferInfoEx" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleScreenBufferSize" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleTextAttribute" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleTitleW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>api-ms-win-core-console-l2-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleTitleA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-0.dll</dll>
		<dll>kernel32legacy.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-1.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-2.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l2-1-0.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>api-ms-win-core-console-l2-2-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-3.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-4.dll</dll>
		<dll>api-ms-win-core-kernel32-legacy-l1-1-5.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetConsoleWindowInfo" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="SetCurrentConsoleFontEx" deprecated="1">
		<dll>kernel32.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleInputW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleInputA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleOutputW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleOutputA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleOutputAttribute" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleOutputCharacterW" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="WriteConsoleOutputCharacterA" deprecated="1">
		<dll>kernel32.dll</dll>
		<dll>api-ms-win-core-console-l2-1-0.dll</dll>
		<dll>kernelbase.dll</dll>
		<dll>api-ms-win-downlevel-kernel32-l1-1-0.dll</dll>
		<mitigation>This function is no longer a part of Microsoft ecosystem roadmap. We do not recommend using this content in new products, but we will continue to support existing usages for the indefinite future. Our preferred modern solution focuses on virtual terminal sequences (https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences) for maximum compatibility in cross-platform scenarios. You can find more information about this design decision in classic console vs. virtual terminal document (https://learn.microsoft.com/en-us/windows/console/classic-vs-vt).</mitigation>
	</api>
	<api name="PrintDlgW" deprecated="1">
		<dll>comdlg32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PrintDlg is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Instead, use PrintDlgEx or PageSetupDlg.</mitigation>
	</api>
	<api name="PrintDlgA" deprecated="1">
		<dll>comdlg32.dll</dll>
		<os>Windows 2000 Professional</os>
		<os>Windows 2000 Server</os>
		<mitigation>PrintDlg is available for use in the operating systems specified in the Requirements section. It may be altered or unavailable in subsequent versions. Instead, use PrintDlgEx or PageSetupDlg.</mitigation>
	</api>
	<dll name="dsound.dll" description="DirectSound" last_client="Windows XP" replacement="XAudio2" replacement_link="https://learn.microsoft.com/en-us/windows/win32/xaudio2/xaudio2-introduction" />
	<dll name="nddeapi.dll" description="Network Dynamic Data Exchange (DDE)" last_client="Windows Vista" replacement="Object Linking and Embedding (OLE)" />
	<dll name="mapi32.dll" description="Windows Messaging (MAPI)" replacement="Selecting an API or technology for developing solutions for Outlook" replacement_link="https://learn.microsoft.com/en-us/office/client-developer/outlook/selecting-an-api-or-technology-for-developing-solutions-for-outlook" />
	<dll name="mapistub.dll" description="Windows Messaging (MAPI)" replacement="Selecting an API or technology for developing solutions for Outlook" replacement_link="https://learn.microsoft.com/en-us/office/client-developer/outlook/selecting-an-api-or-technology-for-developing-solutions-for-outlook" />
	<dll name="snmpapi.dll" description="SNMP" last_client="Windows 2000 Professional" last_server="Windows 2000 Server" replacement="Windows Remote Management" replacement_link="https://learn.microsoft.com/en-us/windows/win32/winrm/portal" />
</root>